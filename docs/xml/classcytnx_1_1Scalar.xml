<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classcytnx_1_1Scalar" kind="class" language="C++" prot="public">
    <compoundname>cytnx::Scalar</compoundname>
    <includes refid="Scalar_8hpp" local="no">Scalar.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classcytnx_1_1Scalar_1a09b266c40e4c7a5c6ec433c09234ecee" prot="public" static="no" mutable="no">
        <type>Scalar_base *</type>
        <definition>Scalar_base* cytnx::Scalar::_impl</definition>
        <argsstring></argsstring>
        <name>_impl</name>
        <qualifiedname>cytnx::Scalar::_impl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2509" column="17" bodyfile="include/Scalar.hpp" bodystart="2509" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a3a74b7ddececcc19b96ef4a82e58637e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::Scalar</definition>
        <argsstring>()</argsstring>
        <name>Scalar</name>
        <qualifiedname>cytnx::Scalar::Scalar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2511" column="5" bodyfile="include/Scalar.hpp" bodystart="2511" bodyend="2511"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1aeb1f9231c8fe83cc8d7cc86e1e585278" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::Scalar</definition>
        <argsstring>(const cytnx_complex128 &amp;in)</argsstring>
        <name>Scalar</name>
        <qualifiedname>cytnx::Scalar::Scalar</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2514" column="5" bodyfile="include/Scalar.hpp" bodystart="2514" bodyend="2514"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a7139d76b5046e917d0a405a6fd7aced8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::Scalar</definition>
        <argsstring>(const cytnx_complex64 &amp;in)</argsstring>
        <name>Scalar</name>
        <qualifiedname>cytnx::Scalar::Scalar</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a63d2515ecaa35660c85571236e61fec7" kindref="member">cytnx_complex64</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2515" column="5" bodyfile="include/Scalar.hpp" bodystart="2515" bodyend="2515"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a14eb8f96decca76c4a93ceb24815fb24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::Scalar</definition>
        <argsstring>(const cytnx_double &amp;in)</argsstring>
        <name>Scalar</name>
        <qualifiedname>cytnx::Scalar::Scalar</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a17b847d265f6551b952fd9847198a464" kindref="member">cytnx_double</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2516" column="5" bodyfile="include/Scalar.hpp" bodystart="2516" bodyend="2516"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a613a6e7200620454903dd6130c01f38d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::Scalar</definition>
        <argsstring>(const cytnx_float &amp;in)</argsstring>
        <name>Scalar</name>
        <qualifiedname>cytnx::Scalar::Scalar</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a456fea0ea7baaa151496b24424829253" kindref="member">cytnx_float</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2517" column="5" bodyfile="include/Scalar.hpp" bodystart="2517" bodyend="2517"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a8b51285938b00790357e30ff0b665d0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::Scalar</definition>
        <argsstring>(const cytnx_uint64 &amp;in)</argsstring>
        <name>Scalar</name>
        <qualifiedname>cytnx::Scalar::Scalar</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a9a7ab808c7cbef775461ccc31eaabeb4" kindref="member">cytnx_uint64</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2518" column="5" bodyfile="include/Scalar.hpp" bodystart="2518" bodyend="2518"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a101cf4d092fb7a92612198da708ad123" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::Scalar</definition>
        <argsstring>(const cytnx_int64 &amp;in)</argsstring>
        <name>Scalar</name>
        <qualifiedname>cytnx::Scalar::Scalar</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1aa7b7ff4d6d244994d35853a6ce547587" kindref="member">cytnx_int64</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2519" column="5" bodyfile="include/Scalar.hpp" bodystart="2519" bodyend="2519"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a4ab116fcda4ae5ed68b8590742cd3809" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::Scalar</definition>
        <argsstring>(const cytnx_uint32 &amp;in)</argsstring>
        <name>Scalar</name>
        <qualifiedname>cytnx::Scalar::Scalar</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a335d8fee19dee02206dbecec6e5ec610" kindref="member">cytnx_uint32</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2520" column="5" bodyfile="include/Scalar.hpp" bodystart="2520" bodyend="2520"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a4208d71bbcb26cc949934f6704882082" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::Scalar</definition>
        <argsstring>(const cytnx_int32 &amp;in)</argsstring>
        <name>Scalar</name>
        <qualifiedname>cytnx::Scalar::Scalar</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a6504b8a7b459f70c0a24d4ea2893a976" kindref="member">cytnx_int32</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2521" column="5" bodyfile="include/Scalar.hpp" bodystart="2521" bodyend="2521"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a5038bc44f5a51b9fbaaafad62f0f8c16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::Scalar</definition>
        <argsstring>(const cytnx_uint16 &amp;in)</argsstring>
        <name>Scalar</name>
        <qualifiedname>cytnx::Scalar::Scalar</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a7f757c129de8dd3de3a4f2d802aa9bbb" kindref="member">cytnx_uint16</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2522" column="5" bodyfile="include/Scalar.hpp" bodystart="2522" bodyend="2522"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a23cebeded16cd2d70b48893bea772fe7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::Scalar</definition>
        <argsstring>(const cytnx_int16 &amp;in)</argsstring>
        <name>Scalar</name>
        <qualifiedname>cytnx::Scalar::Scalar</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a5f27130c68405db77c52f17c3a084f62" kindref="member">cytnx_int16</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2523" column="5" bodyfile="include/Scalar.hpp" bodystart="2523" bodyend="2523"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1ad651a2fb4dc1de070598c3a053b3e7a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::Scalar</definition>
        <argsstring>(const cytnx_bool &amp;in)</argsstring>
        <name>Scalar</name>
        <qualifiedname>cytnx::Scalar::Scalar</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a33aeeaf2c3d5b78b26cc6440916acbf2" kindref="member">cytnx_bool</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2524" column="5" bodyfile="include/Scalar.hpp" bodystart="2524" bodyend="2524"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a176dee0eb471a60d3887227356dbd7f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>cytnx::Scalar::Scalar</definition>
        <argsstring>(const T &amp;in, const unsigned int &amp;dtype)</argsstring>
        <name>Scalar</name>
        <qualifiedname>cytnx::Scalar::Scalar</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2538" column="5" bodyfile="include/Scalar.hpp" bodystart="2538" bodyend="2542"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1ac19788aa6aabc306b0b69e8db0d89094" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::Scalar</definition>
        <argsstring>(const Sproxy &amp;prox)</argsstring>
        <name>Scalar</name>
        <qualifiedname>cytnx::Scalar::Scalar</qualifiedname>
        <param>
          <type>const Sproxy &amp;</type>
          <declname>prox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2545" column="5" bodyfile="src/Scalar.cpp" bodystart="136" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a89982f1a7f0ea28130ea29ecc00de6fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::Scalar</definition>
        <argsstring>(Scalar_base *in)</argsstring>
        <name>Scalar</name>
        <qualifiedname>cytnx::Scalar::Scalar</qualifiedname>
        <param>
          <type>Scalar_base *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2548" column="5" bodyfile="include/Scalar.hpp" bodystart="2548" bodyend="2548"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1ae2a980ba7354a346f9b5cbf2f952af0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::Scalar</definition>
        <argsstring>(const Scalar &amp;rhs)</argsstring>
        <name>Scalar</name>
        <qualifiedname>cytnx::Scalar::Scalar</qualifiedname>
        <param>
          <type>const <ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2599" column="5" bodyfile="include/Scalar.hpp" bodystart="2599" bodyend="2603"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a04f646c6fd1571c3c26b99b54ece023d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
        <definition>Scalar &amp; cytnx::Scalar::operator=</definition>
        <argsstring>(const Scalar &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>cytnx::Scalar::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2606" column="12" bodyfile="include/Scalar.hpp" bodystart="2606" bodyend="2611"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1ad649670e0c367a8f1420106f28b4274a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
        <definition>Scalar &amp; cytnx::Scalar::operator=</definition>
        <argsstring>(const cytnx_complex128 &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>cytnx::Scalar::operator=</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2615" column="12" bodyfile="include/Scalar.hpp" bodystart="2615" bodyend="2618"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1aee1d3fae5ce09bc82d08549e0639f3ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
        <definition>Scalar &amp; cytnx::Scalar::operator=</definition>
        <argsstring>(const cytnx_complex64 &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>cytnx::Scalar::operator=</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a63d2515ecaa35660c85571236e61fec7" kindref="member">cytnx_complex64</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2619" column="12" bodyfile="include/Scalar.hpp" bodystart="2619" bodyend="2622"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a6a8720518d873fb5c2b43e972636c725" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
        <definition>Scalar &amp; cytnx::Scalar::operator=</definition>
        <argsstring>(const cytnx_double &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>cytnx::Scalar::operator=</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a17b847d265f6551b952fd9847198a464" kindref="member">cytnx_double</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2623" column="12" bodyfile="include/Scalar.hpp" bodystart="2623" bodyend="2626"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a207944dfec59aceaa60db5ded74f1285" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
        <definition>Scalar &amp; cytnx::Scalar::operator=</definition>
        <argsstring>(const cytnx_float &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>cytnx::Scalar::operator=</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a456fea0ea7baaa151496b24424829253" kindref="member">cytnx_float</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2627" column="12" bodyfile="include/Scalar.hpp" bodystart="2627" bodyend="2630"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a526b843b2455f4ce8a985297c8469b31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
        <definition>Scalar &amp; cytnx::Scalar::operator=</definition>
        <argsstring>(const cytnx_uint64 &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>cytnx::Scalar::operator=</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a9a7ab808c7cbef775461ccc31eaabeb4" kindref="member">cytnx_uint64</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2631" column="12" bodyfile="include/Scalar.hpp" bodystart="2631" bodyend="2634"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a3508e53a157bef47d16c5bd5d231148d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
        <definition>Scalar &amp; cytnx::Scalar::operator=</definition>
        <argsstring>(const cytnx_int64 &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>cytnx::Scalar::operator=</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1aa7b7ff4d6d244994d35853a6ce547587" kindref="member">cytnx_int64</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2635" column="12" bodyfile="include/Scalar.hpp" bodystart="2635" bodyend="2638"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1accef5f91bc272c3173ec854d3272a204" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
        <definition>Scalar &amp; cytnx::Scalar::operator=</definition>
        <argsstring>(const cytnx_uint32 &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>cytnx::Scalar::operator=</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a335d8fee19dee02206dbecec6e5ec610" kindref="member">cytnx_uint32</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2639" column="12" bodyfile="include/Scalar.hpp" bodystart="2639" bodyend="2642"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a841f12095bf4c5fbae3715215537474b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
        <definition>Scalar &amp; cytnx::Scalar::operator=</definition>
        <argsstring>(const cytnx_int32 &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>cytnx::Scalar::operator=</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a6504b8a7b459f70c0a24d4ea2893a976" kindref="member">cytnx_int32</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2643" column="12" bodyfile="include/Scalar.hpp" bodystart="2643" bodyend="2646"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a2a7aed4856656126aac9372418b786e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
        <definition>Scalar &amp; cytnx::Scalar::operator=</definition>
        <argsstring>(const cytnx_uint16 &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>cytnx::Scalar::operator=</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a7f757c129de8dd3de3a4f2d802aa9bbb" kindref="member">cytnx_uint16</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2647" column="12" bodyfile="include/Scalar.hpp" bodystart="2647" bodyend="2650"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a47f3d4cf504b5112449c7dd20b7420ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
        <definition>Scalar &amp; cytnx::Scalar::operator=</definition>
        <argsstring>(const cytnx_int16 &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>cytnx::Scalar::operator=</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a5f27130c68405db77c52f17c3a084f62" kindref="member">cytnx_int16</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2651" column="12" bodyfile="include/Scalar.hpp" bodystart="2651" bodyend="2654"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a1129392dc21abfe210c1d63ee21cbc77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
        <definition>Scalar &amp; cytnx::Scalar::operator=</definition>
        <argsstring>(const cytnx_bool &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>cytnx::Scalar::operator=</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a33aeeaf2c3d5b78b26cc6440916acbf2" kindref="member">cytnx_bool</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2655" column="12" bodyfile="include/Scalar.hpp" bodystart="2655" bodyend="2658"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1af6e7727b376fc73219663be857ff808b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref></type>
        <definition>Scalar cytnx::Scalar::astype</definition>
        <argsstring>(const unsigned int &amp;dtype) const</argsstring>
        <name>astype</name>
        <qualifiedname>cytnx::Scalar::astype</qualifiedname>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2661" column="12" bodyfile="include/Scalar.hpp" bodystart="2661" bodyend="2664"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a9028bfb655130abc112e9e784e68a77b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref></type>
        <definition>Scalar cytnx::Scalar::conj</definition>
        <argsstring>() const</argsstring>
        <name>conj</name>
        <qualifiedname>cytnx::Scalar::conj</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2666" column="12" bodyfile="include/Scalar.hpp" bodystart="2666" bodyend="2670"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a9b8051559b79dbc940acf0064f967a05" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref></type>
        <definition>Scalar cytnx::Scalar::imag</definition>
        <argsstring>() const</argsstring>
        <name>imag</name>
        <qualifiedname>cytnx::Scalar::imag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2672" column="12" bodyfile="include/Scalar.hpp" bodystart="2672" bodyend="2672"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a5aeb04244fabccd410a6480d6d4aabe6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref></type>
        <definition>Scalar cytnx::Scalar::real</definition>
        <argsstring>() const</argsstring>
        <name>real</name>
        <qualifiedname>cytnx::Scalar::real</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2673" column="12" bodyfile="include/Scalar.hpp" bodystart="2673" bodyend="2673"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a5fe1f997894663a4ac16d144df70fd0c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int cytnx::Scalar::dtype</definition>
        <argsstring>() const</argsstring>
        <name>dtype</name>
        <qualifiedname>cytnx::Scalar::dtype</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2677" column="9" bodyfile="include/Scalar.hpp" bodystart="2677" bodyend="2677"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1aad630e2f1c06e3525acea09dd0ad895a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cytnx::Scalar::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <qualifiedname>cytnx::Scalar::print</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2680" column="10" bodyfile="include/Scalar.hpp" bodystart="2680" bodyend="2684"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1ad23b571d0ed03dc84193d2ca8cdeaeea" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::operator cytnx_double</definition>
        <argsstring>() const</argsstring>
        <name>operator cytnx_double</name>
        <qualifiedname>cytnx::Scalar::operator cytnx_double</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2687" column="14" bodyfile="include/Scalar.hpp" bodystart="2687" bodyend="2687"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a84deab15de8b858f3d7969b59ec404bf" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::operator cytnx_float</definition>
        <argsstring>() const</argsstring>
        <name>operator cytnx_float</name>
        <qualifiedname>cytnx::Scalar::operator cytnx_float</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2688" column="14" bodyfile="include/Scalar.hpp" bodystart="2688" bodyend="2688"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a9528dc7c4df476d8f1d7dfbce7679914" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::operator cytnx_uint64</definition>
        <argsstring>() const</argsstring>
        <name>operator cytnx_uint64</name>
        <qualifiedname>cytnx::Scalar::operator cytnx_uint64</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2689" column="14" bodyfile="include/Scalar.hpp" bodystart="2689" bodyend="2689"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a6a719b506a26762a31234098a8234cee" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::operator cytnx_int64</definition>
        <argsstring>() const</argsstring>
        <name>operator cytnx_int64</name>
        <qualifiedname>cytnx::Scalar::operator cytnx_int64</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2690" column="14" bodyfile="include/Scalar.hpp" bodystart="2690" bodyend="2690"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a5dc71286ea3792ebb393e6de9dcee92f" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::operator cytnx_uint32</definition>
        <argsstring>() const</argsstring>
        <name>operator cytnx_uint32</name>
        <qualifiedname>cytnx::Scalar::operator cytnx_uint32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2691" column="14" bodyfile="include/Scalar.hpp" bodystart="2691" bodyend="2691"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1ac97d9ea742d8580fa2cb232d6546a31e" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::operator cytnx_int32</definition>
        <argsstring>() const</argsstring>
        <name>operator cytnx_int32</name>
        <qualifiedname>cytnx::Scalar::operator cytnx_int32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2692" column="14" bodyfile="include/Scalar.hpp" bodystart="2692" bodyend="2692"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a44cff83c057ce9e90556b6e97c2422c3" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::operator cytnx_uint16</definition>
        <argsstring>() const</argsstring>
        <name>operator cytnx_uint16</name>
        <qualifiedname>cytnx::Scalar::operator cytnx_uint16</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2693" column="14" bodyfile="include/Scalar.hpp" bodystart="2693" bodyend="2693"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a183782adb632935ed0c8241f2d6341f4" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::operator cytnx_int16</definition>
        <argsstring>() const</argsstring>
        <name>operator cytnx_int16</name>
        <qualifiedname>cytnx::Scalar::operator cytnx_int16</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2694" column="14" bodyfile="include/Scalar.hpp" bodystart="2694" bodyend="2694"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a9322af28fca3c26e03267da60eeaaa3c" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::operator cytnx_bool</definition>
        <argsstring>() const</argsstring>
        <name>operator cytnx_bool</name>
        <qualifiedname>cytnx::Scalar::operator cytnx_bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2695" column="14" bodyfile="include/Scalar.hpp" bodystart="2695" bodyend="2695"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a21e17eece833c5a75921da2777c84e6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cytnx::Scalar::~Scalar</definition>
        <argsstring>()</argsstring>
        <name>~Scalar</name>
        <qualifiedname>cytnx::Scalar::~Scalar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2696" column="5" bodyfile="include/Scalar.hpp" bodystart="2696" bodyend="2698"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a2de55991b2e637b041e81105b27d8181" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cytnx::Scalar::operator+=</definition>
        <argsstring>(const T &amp;rc)</argsstring>
        <name>operator+=</name>
        <qualifiedname>cytnx::Scalar::operator+=</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>rc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2702" column="10" bodyfile="include/Scalar.hpp" bodystart="2702" bodyend="2704"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1ae4f0316df1913f615aa6f51cb39fbaac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cytnx::Scalar::operator+=</definition>
        <argsstring>(const Scalar &amp;rhs)</argsstring>
        <name>operator+=</name>
        <qualifiedname>cytnx::Scalar::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2705" column="10" bodyfile="include/Scalar.hpp" bodystart="2705" bodyend="2705"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a01659061f64bf57e5aa425d41d6858df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cytnx::Scalar::operator-=</definition>
        <argsstring>(const T &amp;rc)</argsstring>
        <name>operator-=</name>
        <qualifiedname>cytnx::Scalar::operator-=</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>rc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2707" column="10" bodyfile="include/Scalar.hpp" bodystart="2707" bodyend="2709"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a99c269c473cb6e93dea6556742cdb191" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cytnx::Scalar::operator-=</definition>
        <argsstring>(const Scalar &amp;rhs)</argsstring>
        <name>operator-=</name>
        <qualifiedname>cytnx::Scalar::operator-=</qualifiedname>
        <param>
          <type>const <ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2710" column="10" bodyfile="include/Scalar.hpp" bodystart="2710" bodyend="2710"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a78e6993e115f5ddb5b4188ec9a230abe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cytnx::Scalar::operator*=</definition>
        <argsstring>(const T &amp;rc)</argsstring>
        <name>operator*=</name>
        <qualifiedname>cytnx::Scalar::operator*=</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>rc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2712" column="10" bodyfile="include/Scalar.hpp" bodystart="2712" bodyend="2714"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1ae6cdaee707f73af07bc9983986cf3ac5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cytnx::Scalar::operator*=</definition>
        <argsstring>(const Scalar &amp;rhs)</argsstring>
        <name>operator*=</name>
        <qualifiedname>cytnx::Scalar::operator*=</qualifiedname>
        <param>
          <type>const <ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2715" column="10" bodyfile="include/Scalar.hpp" bodystart="2715" bodyend="2715"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a60840a43f0d992436dbf276649e612f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cytnx::Scalar::operator/=</definition>
        <argsstring>(const T &amp;rc)</argsstring>
        <name>operator/=</name>
        <qualifiedname>cytnx::Scalar::operator/=</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>rc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2717" column="10" bodyfile="include/Scalar.hpp" bodystart="2717" bodyend="2719"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1ae7d0fae444620e6849e975f76d9395ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cytnx::Scalar::operator/=</definition>
        <argsstring>(const Scalar &amp;rhs)</argsstring>
        <name>operator/=</name>
        <qualifiedname>cytnx::Scalar::operator/=</qualifiedname>
        <param>
          <type>const <ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2720" column="10" bodyfile="include/Scalar.hpp" bodystart="2720" bodyend="2720"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a9d8c8619abd7182d606a16f4c1dd6504" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cytnx::Scalar::iabs</definition>
        <argsstring>()</argsstring>
        <name>iabs</name>
        <qualifiedname>cytnx::Scalar::iabs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2722" column="10" bodyfile="include/Scalar.hpp" bodystart="2722" bodyend="2722"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1ac18d7f7da58b768368b5307640494187" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cytnx::Scalar::isqrt</definition>
        <argsstring>()</argsstring>
        <name>isqrt</name>
        <qualifiedname>cytnx::Scalar::isqrt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2724" column="10" bodyfile="include/Scalar.hpp" bodystart="2724" bodyend="2724"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1aa6fa17b2e927f96decb4358405f755d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref></type>
        <definition>Scalar cytnx::Scalar::abs</definition>
        <argsstring>() const</argsstring>
        <name>abs</name>
        <qualifiedname>cytnx::Scalar::abs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2726" column="12" bodyfile="include/Scalar.hpp" bodystart="2726" bodyend="2730"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a6ef0a577696ae0b12ef3b403cb502017" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref></type>
        <definition>Scalar cytnx::Scalar::sqrt</definition>
        <argsstring>() const</argsstring>
        <name>sqrt</name>
        <qualifiedname>cytnx::Scalar::sqrt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2732" column="12" bodyfile="include/Scalar.hpp" bodystart="2732" bodyend="2736"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a4ec389262ae60e291a00d7ba893757b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool cytnx::Scalar::less</definition>
        <argsstring>(const T &amp;rc) const</argsstring>
        <name>less</name>
        <qualifiedname>cytnx::Scalar::less</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>rc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2740" column="10" bodyfile="include/Scalar.hpp" bodystart="2740" bodyend="2749"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a0794f4891038ef8971fbe0e743572f68" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool cytnx::Scalar::less</definition>
        <argsstring>(const Scalar &amp;rhs) const</argsstring>
        <name>less</name>
        <qualifiedname>cytnx::Scalar::less</qualifiedname>
        <param>
          <type>const <ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2750" column="10" bodyfile="include/Scalar.hpp" bodystart="2750" bodyend="2758"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a09ce9b85cfb4d2bcfbb23d32dd3e1eb8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool cytnx::Scalar::leq</definition>
        <argsstring>(const T &amp;rc) const</argsstring>
        <name>leq</name>
        <qualifiedname>cytnx::Scalar::leq</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>rc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2762" column="10" bodyfile="include/Scalar.hpp" bodystart="2762" bodyend="2771"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a9d1cbf6d92e9ca210af660402ef5be55" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool cytnx::Scalar::leq</definition>
        <argsstring>(const Scalar &amp;rhs) const</argsstring>
        <name>leq</name>
        <qualifiedname>cytnx::Scalar::leq</qualifiedname>
        <param>
          <type>const <ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2772" column="10" bodyfile="include/Scalar.hpp" bodystart="2772" bodyend="2780"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a8ade5116a732aae3ff4b8b511756dcfe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool cytnx::Scalar::greater</definition>
        <argsstring>(const T &amp;rc) const</argsstring>
        <name>greater</name>
        <qualifiedname>cytnx::Scalar::greater</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>rc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2784" column="10" bodyfile="include/Scalar.hpp" bodystart="2784" bodyend="2793"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1ab0979a0924c86d682f91e96444c8c815" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool cytnx::Scalar::greater</definition>
        <argsstring>(const Scalar &amp;rhs) const</argsstring>
        <name>greater</name>
        <qualifiedname>cytnx::Scalar::greater</qualifiedname>
        <param>
          <type>const <ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2794" column="10" bodyfile="include/Scalar.hpp" bodystart="2794" bodyend="2802"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1ab24204ce914d33ea38c1d2fa90eedcff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool cytnx::Scalar::geq</definition>
        <argsstring>(const T &amp;rc) const</argsstring>
        <name>geq</name>
        <qualifiedname>cytnx::Scalar::geq</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>rc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2806" column="10" bodyfile="include/Scalar.hpp" bodystart="2806" bodyend="2815"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a79c48f5dca0dbd9b4028483471c5248d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool cytnx::Scalar::geq</definition>
        <argsstring>(const Scalar &amp;rhs) const</argsstring>
        <name>geq</name>
        <qualifiedname>cytnx::Scalar::geq</qualifiedname>
        <param>
          <type>const <ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2816" column="10" bodyfile="include/Scalar.hpp" bodystart="2816" bodyend="2824"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1aab8843e7523f255f68fae27aa1f103c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool cytnx::Scalar::eq</definition>
        <argsstring>(const T &amp;rc) const</argsstring>
        <name>eq</name>
        <qualifiedname>cytnx::Scalar::eq</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>rc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2828" column="10" bodyfile="include/Scalar.hpp" bodystart="2828" bodyend="2837"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1adb28ded1aeede3f8662e8deaaea9df97" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool cytnx::Scalar::eq</definition>
        <argsstring>(const Scalar &amp;rhs) const</argsstring>
        <name>eq</name>
        <qualifiedname>cytnx::Scalar::eq</qualifiedname>
        <param>
          <type>const <ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2838" column="10" bodyfile="include/Scalar.hpp" bodystart="2838" bodyend="2846"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1af46a3c1bba5d6d27517990621bee15a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref></type>
        <definition>Scalar cytnx::Scalar::radd</definition>
        <argsstring>(const T &amp;rc) const</argsstring>
        <name>radd</name>
        <qualifiedname>cytnx::Scalar::radd</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>rc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2850" column="12" bodyfile="include/Scalar.hpp" bodystart="2850" bodyend="2860"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1af42ff2e02ccbb4bc5863cbc332757b1a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref></type>
        <definition>Scalar cytnx::Scalar::radd</definition>
        <argsstring>(const Scalar &amp;rhs) const</argsstring>
        <name>radd</name>
        <qualifiedname>cytnx::Scalar::radd</qualifiedname>
        <param>
          <type>const <ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2861" column="12" bodyfile="include/Scalar.hpp" bodystart="2861" bodyend="2870"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a279ffe4d5bfd5761103b1db1a26f2f8d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref></type>
        <definition>Scalar cytnx::Scalar::rmul</definition>
        <argsstring>(const T &amp;rc) const</argsstring>
        <name>rmul</name>
        <qualifiedname>cytnx::Scalar::rmul</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>rc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2874" column="12" bodyfile="include/Scalar.hpp" bodystart="2874" bodyend="2884"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1acab78dfecd16f8aa5639cdadcf8033d5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref></type>
        <definition>Scalar cytnx::Scalar::rmul</definition>
        <argsstring>(const Scalar &amp;rhs) const</argsstring>
        <name>rmul</name>
        <qualifiedname>cytnx::Scalar::rmul</qualifiedname>
        <param>
          <type>const <ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2885" column="12" bodyfile="include/Scalar.hpp" bodystart="2885" bodyend="2894"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a3fb06a43f99f5d63e24c8e9bc68e036f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref></type>
        <definition>Scalar cytnx::Scalar::rsub</definition>
        <argsstring>(const T &amp;rc) const</argsstring>
        <name>rsub</name>
        <qualifiedname>cytnx::Scalar::rsub</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>rc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2898" column="12" bodyfile="include/Scalar.hpp" bodystart="2898" bodyend="2908"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1af1f45d939e5a81579ad0d0f41df066b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref></type>
        <definition>Scalar cytnx::Scalar::rsub</definition>
        <argsstring>(const Scalar &amp;rhs) const</argsstring>
        <name>rsub</name>
        <qualifiedname>cytnx::Scalar::rsub</qualifiedname>
        <param>
          <type>const <ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2909" column="12" bodyfile="include/Scalar.hpp" bodystart="2909" bodyend="2918"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1aaa4e2404d4dba02f088a679dcd55eac8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref></type>
        <definition>Scalar cytnx::Scalar::rdiv</definition>
        <argsstring>(const T &amp;rc) const</argsstring>
        <name>rdiv</name>
        <qualifiedname>cytnx::Scalar::rdiv</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>rc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2922" column="12" bodyfile="include/Scalar.hpp" bodystart="2922" bodyend="2932"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1ae108fe64019ba439fe580bb0cefad267" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref></type>
        <definition>Scalar cytnx::Scalar::rdiv</definition>
        <argsstring>(const Scalar &amp;rhs) const</argsstring>
        <name>rdiv</name>
        <qualifiedname>cytnx::Scalar::rdiv</qualifiedname>
        <param>
          <type>const <ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2933" column="12" bodyfile="include/Scalar.hpp" bodystart="2933" bodyend="2942"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a338741d2f98bf7b8cfb6cd60e302bf3d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref></type>
        <definition>static Scalar cytnx::Scalar::maxval</definition>
        <argsstring>(const unsigned int &amp;dtype)</argsstring>
        <name>maxval</name>
        <qualifiedname>cytnx::Scalar::maxval</qualifiedname>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2526" column="19" bodyfile="include/Scalar.hpp" bodystart="2526" bodyend="2530"/>
      </memberdef>
      <memberdef kind="function" id="classcytnx_1_1Scalar_1a280d99dd5a05d1887e2bd00a91d1266e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Scalar" kindref="compound">Scalar</ref></type>
        <definition>static Scalar cytnx::Scalar::minval</definition>
        <argsstring>(const unsigned int &amp;dtype)</argsstring>
        <name>minval</name>
        <qualifiedname>cytnx::Scalar::minval</qualifiedname>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Scalar.hpp" line="2531" column="19" bodyfile="include/Scalar.hpp" bodystart="2531" bodyend="2535"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/Scalar.hpp" line="2463" column="3" bodyfile="include/Scalar.hpp" bodystart="2463" bodyend="2984"/>
    <listofallmembers>
      <member refid="classcytnx_1_1Scalar_1a09b266c40e4c7a5c6ec433c09234ecee" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>_impl</name></member>
      <member refid="classcytnx_1_1Scalar_1aa6fa17b2e927f96decb4358405f755d6" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>abs</name></member>
      <member refid="classcytnx_1_1Scalar_1af6e7727b376fc73219663be857ff808b" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>astype</name></member>
      <member refid="classcytnx_1_1Scalar_1a9028bfb655130abc112e9e784e68a77b" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>conj</name></member>
      <member refid="classcytnx_1_1Scalar_1a5fe1f997894663a4ac16d144df70fd0c" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>dtype</name></member>
      <member refid="classcytnx_1_1Scalar_1aab8843e7523f255f68fae27aa1f103c3" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>eq</name></member>
      <member refid="classcytnx_1_1Scalar_1adb28ded1aeede3f8662e8deaaea9df97" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>eq</name></member>
      <member refid="classcytnx_1_1Scalar_1ab24204ce914d33ea38c1d2fa90eedcff" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>geq</name></member>
      <member refid="classcytnx_1_1Scalar_1a79c48f5dca0dbd9b4028483471c5248d" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>geq</name></member>
      <member refid="classcytnx_1_1Scalar_1a8ade5116a732aae3ff4b8b511756dcfe" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>greater</name></member>
      <member refid="classcytnx_1_1Scalar_1ab0979a0924c86d682f91e96444c8c815" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>greater</name></member>
      <member refid="classcytnx_1_1Scalar_1a9d8c8619abd7182d606a16f4c1dd6504" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>iabs</name></member>
      <member refid="classcytnx_1_1Scalar_1a9b8051559b79dbc940acf0064f967a05" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>imag</name></member>
      <member refid="classcytnx_1_1Scalar_1ac18d7f7da58b768368b5307640494187" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>isqrt</name></member>
      <member refid="classcytnx_1_1Scalar_1a09ce9b85cfb4d2bcfbb23d32dd3e1eb8" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>leq</name></member>
      <member refid="classcytnx_1_1Scalar_1a9d1cbf6d92e9ca210af660402ef5be55" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>leq</name></member>
      <member refid="classcytnx_1_1Scalar_1a4ec389262ae60e291a00d7ba893757b3" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>less</name></member>
      <member refid="classcytnx_1_1Scalar_1a0794f4891038ef8971fbe0e743572f68" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>less</name></member>
      <member refid="classcytnx_1_1Scalar_1a338741d2f98bf7b8cfb6cd60e302bf3d" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>maxval</name></member>
      <member refid="classcytnx_1_1Scalar_1a280d99dd5a05d1887e2bd00a91d1266e" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>minval</name></member>
      <member refid="classcytnx_1_1Scalar_1a9322af28fca3c26e03267da60eeaaa3c" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator cytnx_bool</name></member>
      <member refid="classcytnx_1_1Scalar_1ad23b571d0ed03dc84193d2ca8cdeaeea" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator cytnx_double</name></member>
      <member refid="classcytnx_1_1Scalar_1a84deab15de8b858f3d7969b59ec404bf" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator cytnx_float</name></member>
      <member refid="classcytnx_1_1Scalar_1a183782adb632935ed0c8241f2d6341f4" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator cytnx_int16</name></member>
      <member refid="classcytnx_1_1Scalar_1ac97d9ea742d8580fa2cb232d6546a31e" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator cytnx_int32</name></member>
      <member refid="classcytnx_1_1Scalar_1a6a719b506a26762a31234098a8234cee" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator cytnx_int64</name></member>
      <member refid="classcytnx_1_1Scalar_1a44cff83c057ce9e90556b6e97c2422c3" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator cytnx_uint16</name></member>
      <member refid="classcytnx_1_1Scalar_1a5dc71286ea3792ebb393e6de9dcee92f" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator cytnx_uint32</name></member>
      <member refid="classcytnx_1_1Scalar_1a9528dc7c4df476d8f1d7dfbce7679914" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator cytnx_uint64</name></member>
      <member refid="classcytnx_1_1Scalar_1a78e6993e115f5ddb5b4188ec9a230abe" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator*=</name></member>
      <member refid="classcytnx_1_1Scalar_1ae6cdaee707f73af07bc9983986cf3ac5" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator*=</name></member>
      <member refid="classcytnx_1_1Scalar_1a2de55991b2e637b041e81105b27d8181" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator+=</name></member>
      <member refid="classcytnx_1_1Scalar_1ae4f0316df1913f615aa6f51cb39fbaac" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator+=</name></member>
      <member refid="classcytnx_1_1Scalar_1a01659061f64bf57e5aa425d41d6858df" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator-=</name></member>
      <member refid="classcytnx_1_1Scalar_1a99c269c473cb6e93dea6556742cdb191" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator-=</name></member>
      <member refid="classcytnx_1_1Scalar_1a60840a43f0d992436dbf276649e612f9" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator/=</name></member>
      <member refid="classcytnx_1_1Scalar_1ae7d0fae444620e6849e975f76d9395ce" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator/=</name></member>
      <member refid="classcytnx_1_1Scalar_1a04f646c6fd1571c3c26b99b54ece023d" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator=</name></member>
      <member refid="classcytnx_1_1Scalar_1ad649670e0c367a8f1420106f28b4274a" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator=</name></member>
      <member refid="classcytnx_1_1Scalar_1aee1d3fae5ce09bc82d08549e0639f3ae" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator=</name></member>
      <member refid="classcytnx_1_1Scalar_1a6a8720518d873fb5c2b43e972636c725" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator=</name></member>
      <member refid="classcytnx_1_1Scalar_1a207944dfec59aceaa60db5ded74f1285" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator=</name></member>
      <member refid="classcytnx_1_1Scalar_1a526b843b2455f4ce8a985297c8469b31" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator=</name></member>
      <member refid="classcytnx_1_1Scalar_1a3508e53a157bef47d16c5bd5d231148d" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator=</name></member>
      <member refid="classcytnx_1_1Scalar_1accef5f91bc272c3173ec854d3272a204" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator=</name></member>
      <member refid="classcytnx_1_1Scalar_1a841f12095bf4c5fbae3715215537474b" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator=</name></member>
      <member refid="classcytnx_1_1Scalar_1a2a7aed4856656126aac9372418b786e1" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator=</name></member>
      <member refid="classcytnx_1_1Scalar_1a47f3d4cf504b5112449c7dd20b7420ad" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator=</name></member>
      <member refid="classcytnx_1_1Scalar_1a1129392dc21abfe210c1d63ee21cbc77" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>operator=</name></member>
      <member refid="classcytnx_1_1Scalar_1aad630e2f1c06e3525acea09dd0ad895a" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>print</name></member>
      <member refid="classcytnx_1_1Scalar_1af46a3c1bba5d6d27517990621bee15a7" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>radd</name></member>
      <member refid="classcytnx_1_1Scalar_1af42ff2e02ccbb4bc5863cbc332757b1a" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>radd</name></member>
      <member refid="classcytnx_1_1Scalar_1aaa4e2404d4dba02f088a679dcd55eac8" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>rdiv</name></member>
      <member refid="classcytnx_1_1Scalar_1ae108fe64019ba439fe580bb0cefad267" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>rdiv</name></member>
      <member refid="classcytnx_1_1Scalar_1a5aeb04244fabccd410a6480d6d4aabe6" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>real</name></member>
      <member refid="classcytnx_1_1Scalar_1a279ffe4d5bfd5761103b1db1a26f2f8d" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>rmul</name></member>
      <member refid="classcytnx_1_1Scalar_1acab78dfecd16f8aa5639cdadcf8033d5" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>rmul</name></member>
      <member refid="classcytnx_1_1Scalar_1a3fb06a43f99f5d63e24c8e9bc68e036f" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>rsub</name></member>
      <member refid="classcytnx_1_1Scalar_1af1f45d939e5a81579ad0d0f41df066b8" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>rsub</name></member>
      <member refid="classcytnx_1_1Scalar_1a3a74b7ddececcc19b96ef4a82e58637e" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>Scalar</name></member>
      <member refid="classcytnx_1_1Scalar_1aeb1f9231c8fe83cc8d7cc86e1e585278" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>Scalar</name></member>
      <member refid="classcytnx_1_1Scalar_1a7139d76b5046e917d0a405a6fd7aced8" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>Scalar</name></member>
      <member refid="classcytnx_1_1Scalar_1a14eb8f96decca76c4a93ceb24815fb24" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>Scalar</name></member>
      <member refid="classcytnx_1_1Scalar_1a613a6e7200620454903dd6130c01f38d" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>Scalar</name></member>
      <member refid="classcytnx_1_1Scalar_1a8b51285938b00790357e30ff0b665d0a" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>Scalar</name></member>
      <member refid="classcytnx_1_1Scalar_1a101cf4d092fb7a92612198da708ad123" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>Scalar</name></member>
      <member refid="classcytnx_1_1Scalar_1a4ab116fcda4ae5ed68b8590742cd3809" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>Scalar</name></member>
      <member refid="classcytnx_1_1Scalar_1a4208d71bbcb26cc949934f6704882082" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>Scalar</name></member>
      <member refid="classcytnx_1_1Scalar_1a5038bc44f5a51b9fbaaafad62f0f8c16" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>Scalar</name></member>
      <member refid="classcytnx_1_1Scalar_1a23cebeded16cd2d70b48893bea772fe7" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>Scalar</name></member>
      <member refid="classcytnx_1_1Scalar_1ad651a2fb4dc1de070598c3a053b3e7a7" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>Scalar</name></member>
      <member refid="classcytnx_1_1Scalar_1a176dee0eb471a60d3887227356dbd7f3" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>Scalar</name></member>
      <member refid="classcytnx_1_1Scalar_1ac19788aa6aabc306b0b69e8db0d89094" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>Scalar</name></member>
      <member refid="classcytnx_1_1Scalar_1a89982f1a7f0ea28130ea29ecc00de6fa" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>Scalar</name></member>
      <member refid="classcytnx_1_1Scalar_1ae2a980ba7354a346f9b5cbf2f952af0f" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>Scalar</name></member>
      <member refid="classcytnx_1_1Scalar_1a6ef0a577696ae0b12ef3b403cb502017" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>sqrt</name></member>
      <member refid="classcytnx_1_1Scalar_1a21e17eece833c5a75921da2777c84e6d" prot="public" virt="non-virtual"><scope>cytnx::Scalar</scope><name>~Scalar</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
