<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="dox_8md" kind="file" language="Markdown">
    <compoundname>dox.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>Cytnx</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Stable<sp/>Version:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[v0.7.6](https://github.com/kaihsin/Cytnx/tree/v0.7.6)</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Feature:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Python<sp/>x<sp/>C++</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Benefit<sp/>from<sp/>both<sp/>side.<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>One<sp/>can<sp/>do<sp/>simple<sp/>prototype<sp/>on<sp/>python<sp/>side<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>and<sp/>easy<sp/>transfer<sp/>to<sp/>C++<sp/>with<sp/>small<sp/>effort!</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cpp}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>c++<sp/>version:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#include<sp/>&quot;cytnx.hpp&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cytnx::Tensor<sp/>A({3,4,5},cytnx::Type.Double,cytnx::Device.cpu)</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.py}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>python<sp/>version:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>import<sp/>cytnx</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>A<sp/>=<sp/><sp/>cytnx.Tensor([3,4,5],dtype=cytnx.Type.Double,device=cytnx.Device.cpu)</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>1.<sp/>All<sp/>the<sp/>Storage<sp/>and<sp/>Tensor<sp/>can<sp/>now<sp/>have<sp/>mulitple<sp/>type<sp/>support.<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>The<sp/>avaliable<sp/>types<sp/>are<sp/>:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>cytnx<sp/>type<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>c++<sp/>type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Type<sp/>object</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>|------------------|----------------------|--------------------</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>cytnx_double<sp/><sp/><sp/><sp/><sp/>|<sp/>double<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Type.Double</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>cytnx_float<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>float<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Type.Float</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>cytnx_uint64<sp/><sp/><sp/><sp/><sp/>|<sp/>uint64_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Type.Uint64</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>cytnx_uint32<sp/><sp/><sp/><sp/><sp/>|<sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Type.Uint32</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>cytnx_uint16<sp/><sp/><sp/><sp/><sp/>|<sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Type.Uint16</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>cytnx_int64<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>int64_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Type.Int64</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>cytnx_int32<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>int32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Type.Int32</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>cytnx_int16<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>int16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Type.Int16</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>cytnx_complex128<sp/>|<sp/>std::complex&lt;double&gt;<sp/>|<sp/>Type.ComplexDouble</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>cytnx_complex64<sp/><sp/>|<sp/>std::complex&lt;float&gt;<sp/><sp/>|<sp/>Type.ComplexFloat</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/>cytnx_bool<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bool<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Type.Bool</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>2.<sp/>Multiple<sp/>devices<sp/>support.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>simple<sp/>moving<sp/>btwn<sp/>CPU<sp/>and<sp/>GPU<sp/>(see<sp/>below)</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Objects:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>\link<sp/>cytnx::Storage<sp/>Storage<sp/>\endlink<sp/><sp/><sp/>[binded]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>\link<sp/>cytnx::Tensor<sp/>Tensor<sp/>\endlink<sp/><sp/><sp/>[binded]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>\link<sp/>cytnx::Bond<sp/>Bond<sp/>\endlink<sp/><sp/><sp/><sp/><sp/>[binded]<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>\link<sp/>cytnx::Accessor<sp/>Accessor<sp/>\endlink<sp/>[c++<sp/>only]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>\link<sp/>cytnx::Symmetry<sp/>Symmetry<sp/>\endlink<sp/>[binded]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>\link<sp/>cytnx::UniTensor<sp/>UniTensor<sp/>\endlink<sp/>[binded]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>\link<sp/>cytnx::Network<sp/>Network<sp/>\endlink<sp/>[binded]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>linear<sp/>algebra<sp/>functions:<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>See<sp/>\link<sp/>cytnx::linalg<sp/>cytnx::linalg<sp/>\endlink<sp/>for<sp/>further<sp/>details</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>inplace<sp/>|<sp/>CPU<sp/>|<sp/>GPU<sp/><sp/>|<sp/>callby<sp/>tn<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>----------|-----------|-----|------|-----------</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Add<sp/>Add\endlink<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Sub<sp/>Sub\endlink<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Mul<sp/>Mul\endlink<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Div<sp/>Div\endlink<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Cpr<sp/>Cpr\endlink<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Mod<sp/>Mod\endlink<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+,+=[tn]|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y<sp/>(\link<sp/>cytnx::Tensor::Add_<sp/>Tensor.Add_\endlink)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-,-=[tn]|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y<sp/>(\link<sp/>cytnx::Tensor::Sub_<sp/>Tensor.Sub_\endlink)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*,*=[tn]|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y<sp/>(\link<sp/>cytnx::Tensor::Mul_<sp/>Tensor.Mul_\endlink)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>/,/=[tn]|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y<sp/>(\link<sp/>cytnx::Tensor::Div_<sp/>Tensor.Div_\endlink)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/><sp/>[tn]|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y<sp/>(\link<sp/>cytnx::Tensor::Cpr_<sp/>Tensor.Cpr_\endlink)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Svd<sp/>Svd\endlink<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*\link<sp/>cytnx::linalg::Svd_truncate<sp/>Svd_truncate\endlink<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>N</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::InvM<sp/>InvM\endlink<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>\link<sp/>cytnx::linalg::InvM_<sp/>InvM_\endlink<sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Inv<sp/>Inv\endlink<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>\link<sp/>cytnx::linalg::Inv_<sp/>Inv_\endlink<sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Conj<sp/>Conj\endlink<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>\link<sp/>cytnx::linalg::Conj_<sp/>Conj_\endlink<sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Exp<sp/>Exp\endlink<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>\link<sp/>cytnx::linalg::Exp_<sp/>Exp_\endlink<sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Expf<sp/>Expf\endlink<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>\link<sp/>cytnx::linalg::Expf_<sp/>Expf_\endlink<sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*\link<sp/>cytnx::linalg::ExpH<sp/>ExpH\endlink<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>x<sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>N<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*\link<sp/>cytnx::linalg::ExpM<sp/>ExpM\endlink<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>x<sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>N<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Eigh<sp/>Eigh\endlink<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Matmul<sp/>Matmul\endlink<sp/><sp/>|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>N</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Diag<sp/>Diag\endlink<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>N</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*\link<sp/>cytnx::linalg::Tensordot<sp/>Tensordot\endlink<sp/>|<sp/>x<sp/>|<sp/>Y<sp/>|<sp/>Y<sp/>|<sp/>N</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Outer<sp/>Outer\endlink<sp/><sp/>|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Y<sp/><sp/><sp/>|<sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/>N</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Kron<sp/>Kron\endlink<sp/><sp/>|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Y<sp/><sp/><sp/>|<sp/>N<sp/><sp/><sp/>|<sp/><sp/><sp/>N</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Norm<sp/>Norm\endlink<sp/><sp/>|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Y<sp/><sp/><sp/>|<sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/>Y</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Vectordot<sp/>Vectordot\endlink<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/>.Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>N</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Tridiag<sp/>Tridiag\endlink<sp/><sp/><sp/><sp/>|<sp/>x<sp/>|<sp/>Y<sp/>|<sp/>N<sp/>|<sp/>N<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*\link<sp/>cytnx::linalg::Dot<sp/>Dot\endlink<sp/>|<sp/>x<sp/>|<sp/>Y<sp/>|<sp/>Y<sp/>|<sp/>N</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Eig<sp/>Eig\endlink<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>N<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Pow<sp/>Pow\endlink<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>\link<sp/>cytnx::linalg::Pow_<sp/>Pow_\endlink<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Abs<sp/>Abs\endlink<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>\link<sp/>cytnx::linalg::Abs_<sp/>Abs_\endlink<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>N<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Qr<sp/>Qr\endlink<sp/><sp/><sp/><sp/>|<sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>N<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>N</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Qdr<sp/>Qdr\endlink<sp/><sp/><sp/><sp/>|<sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>N<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>N</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Min<sp/>Min\endlink<sp/><sp/><sp/><sp/>|<sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>N<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Max<sp/>Max\endlink<sp/><sp/><sp/><sp/>|<sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>N<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Y</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*\link<sp/>cytnx::linalg::Trace<sp/>Trace\endlink<sp/>|<sp/>x<sp/>|<sp/>Y<sp/>|<sp/>N<sp/>|<sp/>N</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>iterative<sp/>solver</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\link<sp/>cytnx::linalg::Lanczos_ER<sp/>Lanczos_ER\endlink<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>this<sp/>is<sp/>a<sp/>high<sp/>level<sp/>linalg<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>^<sp/>this<sp/>is<sp/>temporary<sp/>disable</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.<sp/>this<sp/>is<sp/>floating<sp/>point<sp/>type<sp/>only</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Container<sp/>Generators<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Tensor:<sp/>\link<sp/>cytnx::zeros<sp/>zeros()\endlink,<sp/>\link<sp/>cytnx::ones<sp/>ones()\endlink,<sp/>\link<sp/>cytnx::arange<sp/>arange()\endlink,<sp/>\link<sp/>cytnx::identity<sp/>identity()\endlink,<sp/>\link<sp/>cytnx::eye<sp/>eye()\endlink,</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Physics<sp/>Category</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Tensor:<sp/>\link<sp/>cytnx::physics::spin<sp/>spin()\endlink<sp/><sp/>\link<sp/>cytnx::physics::pauli<sp/>pauli()\endlink</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Random<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>See<sp/>\link<sp/>cytnx::random<sp/>cytnx::random<sp/>\endlink<sp/>for<sp/>further<sp/>details</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/><sp/><sp/><sp/>|<sp/>Tn<sp/><sp/>|<sp/>Stor<sp/>|<sp/>CPU<sp/>|<sp/>GPU<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>----------|-----|------|-----|-----------</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*\link<sp/>cytnx::random::Make_normal<sp/>Make_normal\endlink<sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>Y<sp/><sp/><sp/>|<sp/>Y<sp/><sp/><sp/>|<sp/><sp/>Y</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>^\link<sp/>cytnx::random::normal<sp/>normal\endlink<sp/><sp/><sp/>|<sp/><sp/>Y<sp/><sp/>|<sp/><sp/>x<sp/><sp/><sp/>|<sp/>Y<sp/><sp/><sp/>|<sp/><sp/>Y</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>this<sp/>is<sp/>initializer</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>^<sp/>this<sp/>is<sp/>generator</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[Note]<sp/>The<sp/>difference<sp/>of<sp/>initializer<sp/>and<sp/>generator<sp/>is<sp/>that<sp/>initializer<sp/>is<sp/>used<sp/>to<sp/>initialize<sp/>the<sp/>Tensor,<sp/>and<sp/>generator<sp/>generates<sp/>a<sp/>new<sp/>Tensor.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>conda<sp/>install<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[Currently<sp/>Linux<sp/>only]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>without<sp/>CUDA</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>python<sp/>3.6/3.7/3.8:<sp/>conda<sp/>install<sp/>-c<sp/>kaihsinwu<sp/>cytnx</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>CUDA</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>python<sp/>3.6/3.7/3.8:<sp/>conda<sp/>install<sp/>-c<sp/>kaihsinwu<sp/>cytnx_cuda</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Some<sp/>snippets:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Storage</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>Memory<sp/>container<sp/>with<sp/>GPU/CPU<sp/>support.<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maintain<sp/>type<sp/>conversions<sp/>(type<sp/>casting<sp/>btwn<sp/>Storages)<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>moving<sp/>btwn<sp/>devices.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>Generic<sp/>type<sp/>object,<sp/>the<sp/>behavior<sp/>is<sp/>very<sp/>similar<sp/>to<sp/>python.</highlight></codeline>
<codeline><highlight class="normal">```{.cpp}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Storage<sp/>A(400,Type.Double);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;i&lt;400;i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A.at&lt;double&gt;(i)<sp/>=<sp/>i;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Storage<sp/>B<sp/>=<sp/>A;<sp/>//<sp/>A<sp/>and<sp/>B<sp/>share<sp/>same<sp/>memory,<sp/>this<sp/>is<sp/>similar<sp/>as<sp/>python<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Storage<sp/>C<sp/>=<sp/>A.to(Device.cuda+0);<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Tensor</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>A<sp/>tensor,<sp/>API<sp/>very<sp/>similar<sp/>to<sp/>numpy<sp/>and<sp/>pytorch.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>simple<sp/>moving<sp/>btwn<sp/>CPU<sp/>and<sp/>GPU:</highlight></codeline>
<codeline><highlight class="normal">```{.cpp}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor<sp/>A({3,4},Type.Double,Device.cpu);<sp/>//<sp/>create<sp/>tensor<sp/>on<sp/>CPU<sp/>(default)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor<sp/>B({3,4},Type.Double,Device.cuda+0);<sp/>//<sp/>create<sp/>tensor<sp/>on<sp/>GPU<sp/>with<sp/>gpu-id=0</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor<sp/>C<sp/>=<sp/>B;<sp/>//<sp/>C<sp/>and<sp/>B<sp/>share<sp/>same<sp/>memory.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>move<sp/>A<sp/>to<sp/>gpu</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor<sp/>D<sp/>=<sp/>A.to(Device.cuda+0);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>inplace<sp/>move<sp/>A<sp/>to<sp/>gpu</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A.to_(Device.cuda+0);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>Type<sp/>conversion<sp/>in<sp/>between<sp/>avaliable:</highlight></codeline>
<codeline><highlight class="normal">```{.cpp}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor<sp/>A({3,4},Type.Double);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor<sp/>B<sp/>=<sp/>A.astype(Type.Uint64);<sp/>//<sp/>cast<sp/>double<sp/>to<sp/>uint64_t</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>vitual<sp/>swap<sp/>and<sp/>permute.<sp/>All<sp/>the<sp/>permute<sp/>and<sp/>swap<sp/>will<sp/>not<sp/>change<sp/>the<sp/>underlying<sp/>memory</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>Use<sp/>Contiguous()<sp/>when<sp/>needed<sp/>to<sp/>actual<sp/>moving<sp/>the<sp/>memory<sp/>layout.</highlight></codeline>
<codeline><highlight class="normal">```{.cpp}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor<sp/>A({3,4,5,2},Type.Double);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A.permute_(0,3,1,2);<sp/>//<sp/>this<sp/>will<sp/>not<sp/>change<sp/>the<sp/>memory,<sp/>only<sp/>the<sp/>shape<sp/>info<sp/>is<sp/>changed.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>A.is_contiguous()<sp/>&lt;&lt;<sp/>endl;<sp/>//<sp/>this<sp/>will<sp/>be<sp/>false!</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A.contiguous_();<sp/>//<sp/>call<sp/>Configuous()<sp/>to<sp/>actually<sp/>move<sp/>the<sp/>memory.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>A.is_contiguous()<sp/>&lt;&lt;<sp/>endl;<sp/>//<sp/>this<sp/>will<sp/>be<sp/>true!</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>access<sp/>single<sp/>element<sp/>using<sp/>.at</highlight></codeline>
<codeline><highlight class="normal">```{.cpp}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor<sp/>A({3,4,5},Type.Double);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>val<sp/>=<sp/>A.at&lt;double&gt;(0,2,2);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>access<sp/>elements<sp/>with<sp/>python<sp/>slices<sp/>similarity:</highlight></codeline>
<codeline><highlight class="normal">```{.cpp}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>Accessor<sp/>ac;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor<sp/>A({3,4,5},Type.Double);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor<sp/>out<sp/>=<sp/>A(0,&quot;:&quot;,&quot;1:4&quot;);<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>equivalent<sp/>to<sp/>python:<sp/>out<sp/>=<sp/>A[0,:,1:4]<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">##<sp/>Fast<sp/>Examples</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>See<sp/>test.cpp<sp/>for<sp/>using<sp/>C++<sp/>.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>See<sp/>test.py<sp/>for<sp/>using<sp/>python<sp/><sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Developer</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Kai-Hsin<sp/>Wu<sp/>(Boston<sp/>Univ.)<sp/>kaihsinwu@gmail.com<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Contributors</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Ying-Jer<sp/>Kao<sp/>(NTU,<sp/>Taiwan):<sp/>setuptool,<sp/>cmake</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Yen-Hsin<sp/>Wu<sp/>(NTU,<sp/>Taiwan):<sp/>Network<sp/>optimization</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Yu-Hsueh<sp/>Chen<sp/>(NTU,<sp/>Taiwan):<sp/>example,<sp/>and<sp/>testing</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Po-Kwan<sp/>Wu<sp/>(OSU):<sp/>Icon<sp/>optimization<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Wen-Han<sp/>Kao<sp/>(UMN,<sp/>USA)<sp/>:<sp/>testing<sp/>of<sp/>conda<sp/>install<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Ke<sp/>Hsu<sp/>(NTU,<sp/>Taiwan):<sp/>Lstsq,<sp/>linalg<sp/>funcitons<sp/>and<sp/>examples<sp/><sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Refereces:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>example/DMRG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>https://www.tensors.net/dmrg</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
    </programlisting>
    <location file="dox.md"/>
  </compounddef>
</doxygen>
