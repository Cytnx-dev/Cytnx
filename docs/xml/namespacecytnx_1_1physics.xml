<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="namespacecytnx_1_1physics" kind="namespace" language="C++">
    <compoundname>cytnx::physics</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacecytnx_1_1physics_1a9f018f04ccd068e899a8fcfe2e9b82d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor cytnx::physics::spin</definition>
        <argsstring>(const cytnx_double &amp;S, const std::string &amp;Comp, const int &amp;device=Device.cpu)</argsstring>
        <name>spin</name>
        <qualifiedname>cytnx::physics::spin</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a17b847d265f6551b952fd9847198a464" kindref="member">cytnx_double</ref> &amp;</type>
          <declname>S</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>Comp</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>device</declname>
          <defval>Device.cpu</defval>
        </param>
        <briefdescription>
<para>create Spin-S representation matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>S</parametername>
</parameternamelist>
<parameterdescription>
<para>the Spin index. should be multiple of 1/2. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Comp</parametername>
</parameternamelist>
<parameterdescription>
<para>the Component of Spin, it can be &apos;x&apos;, &apos;y&apos; and &apos;z&apos; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>the device that the <ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref> is put on. It can be any device defined in <ref refid="namespacecytnx_1a0159aceab8996db3faf89716e4dd6b9a" kindref="member">cytnx::Device </ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>[<ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref>] </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Physics.cpp" line="13" column="12" bodyfile="src/Physics.cpp" bodystart="13" bodyend="53" declfile="include/Physics.hpp" declline="25" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespacecytnx_1_1physics_1a1c6ebefa40751712dfb8976b015f48d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor cytnx::physics::pauli</definition>
        <argsstring>(const std::string &amp;Comp, const int &amp;device=Device.cpu)</argsstring>
        <name>pauli</name>
        <qualifiedname>cytnx::physics::pauli</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>Comp</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>device</declname>
          <defval>Device.cpu</defval>
        </param>
        <briefdescription>
<para>create Pauli matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Comp</parametername>
</parameternamelist>
<parameterdescription>
<para>the Component of Spin, it can be &apos;x&apos;, &apos;y&apos; and &apos;z&apos; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>the device that the <ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref> is put on. It can be any device defined in <ref refid="namespacecytnx_1a0159aceab8996db3faf89716e4dd6b9a" kindref="member">cytnx::Device </ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>[<ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref>] </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Physics.cpp" line="58" column="12" bodyfile="src/Physics.cpp" bodystart="58" bodyend="75" declfile="include/Physics.hpp" declline="42" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespacecytnx_1_1physics_1af2c0256f7e3502785679b5e6805973e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor cytnx::physics::spin</definition>
        <argsstring>(const cytnx_double &amp;S, const char &amp;Comp, const int &amp;device)</argsstring>
        <name>spin</name>
        <qualifiedname>cytnx::physics::spin</qualifiedname>
        <param>
          <type>const <ref refid="namespacecytnx_1a17b847d265f6551b952fd9847198a464" kindref="member">cytnx_double</ref> &amp;</type>
          <declname>S</declname>
        </param>
        <param>
          <type>const char &amp;</type>
          <declname>Comp</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Physics.cpp" line="54" column="12" bodyfile="src/Physics.cpp" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespacecytnx_1_1physics_1a808ad167af6ff7b343dc503c9264b2a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor cytnx::physics::pauli</definition>
        <argsstring>(const char &amp;Comp, const int &amp;device)</argsstring>
        <name>pauli</name>
        <qualifiedname>cytnx::physics::pauli</qualifiedname>
        <param>
          <type>const char &amp;</type>
          <declname>Comp</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Physics.cpp" line="76" column="12" bodyfile="src/Physics.cpp" bodystart="76" bodyend="76"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/Physics.hpp" line="12" column="3"/>
  </compounddef>
</doxygen>
