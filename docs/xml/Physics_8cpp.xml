<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="Physics_8cpp" kind="file" language="C++">
    <compoundname>Physics.cpp</compoundname>
    <includes refid="Physics_8hpp" local="yes">Physics.hpp</includes>
    <includes refid="Storage_8hpp" local="yes">Storage.hpp</includes>
    <includes refid="Generator_8hpp" local="yes">Generator.hpp</includes>
    <includes refid="utils_8hpp" local="yes">utils/utils.hpp</includes>
    <includes local="yes">utils/utils_internal_interface.hpp</includes>
    <includes refid="linalg_8hpp" local="yes">linalg.hpp</includes>
    <includes local="no">cfloat</includes>
    <includes local="no">iostream</includes>
    <includes local="no">cmath</includes>
    <incdepgraph>
      <node id="36">
        <label>Accessor.hpp</label>
        <link refid="Accessor_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>Bond.hpp</label>
        <link refid="Bond_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Device.hpp</label>
        <link refid="Device_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>Generator.hpp</label>
        <link refid="Generator_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>LinOp.hpp</label>
        <link refid="LinOp_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Physics.hpp</label>
        <link refid="Physics_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>Scalar.hpp</label>
        <link refid="Scalar_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Storage.hpp</label>
        <link refid="Storage_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>Symmetry.hpp</label>
        <link refid="Symmetry_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Tensor.hpp</label>
        <link refid="Tensor_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Type.hpp</label>
        <link refid="Type_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>UniTensor.hpp</label>
        <link refid="UniTensor_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>cytnx_error.hpp</label>
        <link refid="cytnx__error_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>intrusive_ptr_base.hpp</label>
        <link refid="intrusive__ptr__base_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>linalg.hpp</label>
        <link refid="linalg_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>utils/utils.hpp</label>
        <link refid="utils_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Physics.cpp</label>
        <link refid="Physics_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>algorithm</label>
      </node>
      <node id="28">
        <label>boost/checked_delete.hpp</label>
      </node>
      <node id="29">
        <label>boost/detail/atomic_count.hpp</label>
      </node>
      <node id="27">
        <label>boost/smart_ptr/intrusive_ptr.hpp</label>
      </node>
      <node id="40">
        <label>cartesian.hpp</label>
      </node>
      <node id="26">
        <label>cassert</label>
      </node>
      <node id="67">
        <label>cfloat</label>
      </node>
      <node id="8">
        <label>climits</label>
      </node>
      <node id="31">
        <label>cmath</label>
      </node>
      <node id="5">
        <label>complex</label>
      </node>
      <node id="13">
        <label>cstdio</label>
      </node>
      <node id="14">
        <label>cstdlib</label>
      </node>
      <node id="15">
        <label>cstring</label>
      </node>
      <node id="56">
        <label>dynamic_arg_resolver.hpp</label>
      </node>
      <node id="22">
        <label>fstream</label>
      </node>
      <node id="66">
        <label>functional</label>
      </node>
      <node id="23">
        <label>initializer_list</label>
      </node>
      <node id="17">
        <label>iostream</label>
      </node>
      <node id="33">
        <label>limits</label>
      </node>
      <node id="57">
        <label>map</label>
      </node>
      <node id="25">
        <label>ostream</label>
      </node>
      <node id="16">
        <label>stdarg.h</label>
      </node>
      <node id="18">
        <label>stdexcept</label>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
      <node id="51">
        <label>str_utils.hpp</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="32">
        <label>type_traits</label>
      </node>
      <node id="11">
        <label>typeindex</label>
      </node>
      <node id="9">
        <label>typeinfo</label>
      </node>
      <node id="10">
        <label>unordered_map</label>
      </node>
      <node id="37">
        <label>utility</label>
      </node>
      <node id="35">
        <label>utils/dynamic_arg_resolver.hpp</label>
      </node>
      <node id="63">
        <label>utils/utils_internal_interface.hpp</label>
      </node>
      <node id="60">
        <label>utils/vec_clone.hpp</label>
      </node>
      <node id="34">
        <label>utils/vec_range.hpp</label>
      </node>
      <node id="50">
        <label>vec2d_col_sort.hpp</label>
      </node>
      <node id="54">
        <label>vec_argsort.hpp</label>
      </node>
      <node id="41">
        <label>vec_cast.hpp</label>
      </node>
      <node id="42">
        <label>vec_clone.hpp</label>
      </node>
      <node id="47">
        <label>vec_concatenate.hpp</label>
      </node>
      <node id="45">
        <label>vec_erase.hpp</label>
      </node>
      <node id="48">
        <label>vec_intersect.hpp</label>
      </node>
      <node id="53">
        <label>vec_io.hpp</label>
      </node>
      <node id="44">
        <label>vec_map.hpp</label>
      </node>
      <node id="52">
        <label>vec_print.hpp</label>
      </node>
      <node id="49">
        <label>vec_range.hpp</label>
      </node>
      <node id="55">
        <label>vec_sort.hpp</label>
      </node>
      <node id="43">
        <label>vec_unique.hpp</label>
      </node>
      <node id="46">
        <label>vec_where.hpp</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacecytnx">cytnx</innernamespace>
    <innernamespace refid="namespacecytnx_1_1physics">cytnx::physics</innernamespace>
    <innernamespace refid="namespacecytnx_1_1qgates">cytnx::qgates</innernamespace>
    <innernamespace refid="namespacecytnx_1_1operators">cytnx::operators</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Physics_8hpp" kindref="compound">Physics.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Storage_8hpp" kindref="compound">Storage.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Generator_8hpp" kindref="compound">Generator.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="utils_8hpp" kindref="compound">utils/utils.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;utils/utils_internal_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="linalg_8hpp" kindref="compound">linalg.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cfloat&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecytnx" kindref="compound">cytnx</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">physics<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>Tensor<sp/><ref refid="namespacecytnx_1_1physics_1a9f018f04ccd068e899a8fcfe2e9b82d4" kindref="member">spin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecytnx_1a17b847d265f6551b952fd9847198a464" kindref="member">cytnx_double</ref><sp/>&amp;S,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;Comp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;device)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cytnx__error_8hpp_1aa2edc77cab5ba7d1561fd1ea6cfba9ac" kindref="member">cytnx_error_msg</ref>(S<sp/>&lt;<sp/>0.5,<sp/></highlight><highlight class="stringliteral">&quot;[ERROR][physics::spin]<sp/>S<sp/>can<sp/>only<sp/>be<sp/>multiple<sp/>of<sp/>1/2.%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecytnx_1a17b847d265f6551b952fd9847198a464" kindref="member">cytnx_double</ref><sp/>tN<sp/>=<sp/>S<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecytnx_1a17b847d265f6551b952fd9847198a464" kindref="member">cytnx_double</ref><sp/>Intp,<sp/>Fracp;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Fracp<sp/>=<sp/>modf(tN,<sp/>&amp;Intp);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cytnx__error_8hpp_1aa2edc77cab5ba7d1561fd1ea6cfba9ac" kindref="member">cytnx_error_msg</ref>(Fracp<sp/>&gt;<sp/>1.0e-10,<sp/></highlight><highlight class="stringliteral">&quot;[ERROR][physics::spin]<sp/>S<sp/>can<sp/>only<sp/>be<sp/>multiple<sp/>of<sp/>1/2.%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecytnx_1a9a7ab808c7cbef775461ccc31eaabeb4" kindref="member">cytnx_uint64</ref><sp/>Dim<sp/>=<sp/>tN<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Tensor<sp/>Out<sp/>=<sp/><ref refid="namespacecytnx_1ab8a79a03fb0465f3eb2641017f3f1755" kindref="member">zeros</ref>({Dim,<sp/>Dim},<sp/><ref refid="namespacecytnx_1ac2c6c045a5fd258e21bd0786744839c2" kindref="member">Type</ref>.ComplexDouble,<sp/>device);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>direction:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Comp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal"><sp/>||<sp/>Comp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacecytnx_1a9a7ab808c7cbef775461ccc31eaabeb4" kindref="member">cytnx_uint64</ref><sp/>a<sp/>=<sp/>0;<sp/>a<sp/>&lt;<sp/>Dim;<sp/>a++)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Out.<ref refid="classcytnx_1_1Tensor_1a55f6e4c4106c0964f23fb06ac63d75ec" kindref="member">at</ref>&lt;<ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref>&gt;({a,<sp/>a})<sp/>=<sp/>S<sp/>-<sp/>a;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Comp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal"><sp/>||<sp/>Comp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacecytnx_1a9a7ab808c7cbef775461ccc31eaabeb4" kindref="member">cytnx_uint64</ref><sp/>a<sp/>=<sp/>0;<sp/>a<sp/>&lt;<sp/>Dim;<sp/>a++)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Out.at&lt;<ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref>&gt;({a,<sp/>a<sp/>-<sp/>1})<sp/>=</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref>(0,<sp/>1)<sp/>*<sp/>pow((S<sp/>+<sp/>1)<sp/>*<sp/>(2<sp/>*<sp/>a)<sp/>-<sp/>(a<sp/>+<sp/>1)<sp/>*<sp/>a,<sp/>0.5)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>!=<sp/>Dim<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Out.at&lt;<ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref>&gt;({a,<sp/>a<sp/>+<sp/>1})<sp/>=</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref>(0,<sp/>-1)<sp/>*<sp/>pow((S<sp/>+<sp/>1)<sp/>*<sp/>(2<sp/>*<sp/>a<sp/>+<sp/>2)<sp/>-<sp/>(a<sp/>+<sp/>2)<sp/>*<sp/>(a<sp/>+<sp/>1),<sp/>0.5)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Comp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>||<sp/>Comp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacecytnx_1a9a7ab808c7cbef775461ccc31eaabeb4" kindref="member">cytnx_uint64</ref><sp/>a<sp/>=<sp/>0;<sp/>a<sp/>&lt;<sp/>Dim;<sp/>a++)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Out.at&lt;<ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref>&gt;({a,<sp/>a<sp/>-<sp/>1})<sp/>=<sp/>pow((S<sp/>+<sp/>1)<sp/>*<sp/>(2<sp/>*<sp/>a)<sp/>-<sp/>(a<sp/>+<sp/>1)<sp/>*<sp/>a,<sp/>0.5)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>!=<sp/>Dim<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Out.at&lt;<ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref>&gt;({a,<sp/>a<sp/>+<sp/>1})<sp/>=</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pow((S<sp/>+<sp/>1)<sp/>*<sp/>(2<sp/>*<sp/>a<sp/>+<sp/>2)<sp/>-<sp/>(a<sp/>+<sp/>2)<sp/>*<sp/>(a<sp/>+<sp/>1),<sp/>0.5)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cytnx__error_8hpp_1aa2edc77cab5ba7d1561fd1ea6cfba9ac" kindref="member">cytnx_error_msg</ref>(</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[ERROR][physics::spin]<sp/>Invalid<sp/>Component,<sp/>can<sp/>only<sp/>be<sp/>&apos;x&apos;,<sp/>&apos;y&apos;<sp/>or<sp/>&apos;z&apos;.%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Out;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>Tensor<sp/><ref refid="namespacecytnx_1_1physics_1a9f018f04ccd068e899a8fcfe2e9b82d4" kindref="member">spin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecytnx_1a17b847d265f6551b952fd9847198a464" kindref="member">cytnx_double</ref><sp/>&amp;S,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>&amp;Comp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;device)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecytnx_1_1physics_1a9f018f04ccd068e899a8fcfe2e9b82d4" kindref="member">spin</ref>(S,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(1,<sp/>Comp),<sp/>device);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>Tensor<sp/><ref refid="namespacecytnx_1_1physics_1a1c6ebefa40751712dfb8976b015f48d6" kindref="member">pauli</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;Comp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;device)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Tensor<sp/>Out<sp/>=<sp/><ref refid="namespacecytnx_1ab8a79a03fb0465f3eb2641017f3f1755" kindref="member">zeros</ref>({2,<sp/>2},<sp/><ref refid="namespacecytnx_1ac2c6c045a5fd258e21bd0786744839c2" kindref="member">Type</ref>.ComplexDouble,<sp/>device);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Comp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal"><sp/>||<sp/>Comp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Out.<ref refid="classcytnx_1_1Tensor_1a55f6e4c4106c0964f23fb06ac63d75ec" kindref="member">at</ref>&lt;<ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref>&gt;({0,<sp/>0})<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Out.at&lt;<ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref>&gt;({1,<sp/>1})<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Comp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>||<sp/>Comp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Out.at&lt;<ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref>&gt;({0,<sp/>1})<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Out.at&lt;<ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref>&gt;({1,<sp/>0})<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Comp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal"><sp/>||<sp/>Comp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Out.at&lt;<ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref>&gt;({0,<sp/>1})<sp/>=<sp/><ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref>(0,<sp/>-1);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Out.at&lt;<ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref>&gt;({1,<sp/>0})<sp/>=<sp/><ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref>(0,<sp/>1);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cytnx__error_8hpp_1aa2edc77cab5ba7d1561fd1ea6cfba9ac" kindref="member">cytnx_error_msg</ref>(</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[ERROR][physics::pauli]<sp/>Invalid<sp/>Component,<sp/>can<sp/>only<sp/>be<sp/>&apos;x&apos;,<sp/>&apos;y&apos;<sp/>or<sp/>&apos;z&apos;.%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Out;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>Tensor<sp/><ref refid="namespacecytnx_1_1physics_1a1c6ebefa40751712dfb8976b015f48d6" kindref="member">pauli</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>&amp;Comp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;device)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecytnx_1_1physics_1a1c6ebefa40751712dfb8976b015f48d6" kindref="member">pauli</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(1,<sp/>Comp),<sp/>device);<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>physics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cytnx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecytnx" kindref="compound">cytnx</ref><sp/>{</highlight></codeline>
<codeline lineno="82" refid="namespacecytnx_1_1qgates" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">qgates<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecytnx" kindref="compound">cytnx</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref><sp/><ref refid="namespacecytnx_1_1qgates_1a9c9eb47d19b9e14079706e25b34dd472" kindref="member">pauli_x</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;device)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref><sp/>tmp<sp/>=<sp/><ref refid="namespacecytnx_1_1physics_1a1c6ebefa40751712dfb8976b015f48d6" kindref="member">cytnx::physics::pauli</ref>(</highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">,<sp/>device);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref>(tmp,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref><sp/><ref refid="namespacecytnx_1_1qgates_1a5ab15d340a41e6b48bfb166470f766f1" kindref="member">pauli_y</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;device)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref><sp/>tmp<sp/>=<sp/><ref refid="namespacecytnx_1_1physics_1a1c6ebefa40751712dfb8976b015f48d6" kindref="member">cytnx::physics::pauli</ref>(</highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal">,<sp/>device);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref>(tmp,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref><sp/><ref refid="namespacecytnx_1_1qgates_1a16bbe8cf5ae401eb69c814da06c4c359" kindref="member">pauli_z</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;device)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref><sp/>tmp<sp/>=<sp/><ref refid="namespacecytnx_1_1physics_1a1c6ebefa40751712dfb8976b015f48d6" kindref="member">cytnx::physics::pauli</ref>(</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">,<sp/>device);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref>(tmp,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref><sp/><ref refid="namespacecytnx_1_1qgates_1a37aadd0c317df789f26bad99652d0d3e" kindref="member">hadamard</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;device)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref><sp/>tmp<sp/>=<sp/><ref refid="namespacecytnx_1_1physics_1a1c6ebefa40751712dfb8976b015f48d6" kindref="member">cytnx::physics::pauli</ref>(</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">,<sp/>device);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[{0,<sp/>1}]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[{1,<sp/>0}]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref>(tmp,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref><sp/><ref refid="namespacecytnx_1_1qgates_1a86725371dd70a2a50ff67c76a4d0b99a" kindref="member">phase_shift</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecytnx_1a17b847d265f6551b952fd9847198a464" kindref="member">cytnx_double</ref><sp/>&amp;phase,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;device)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref><sp/>tmp<sp/>=<sp/><ref refid="namespacecytnx_1_1physics_1a1c6ebefa40751712dfb8976b015f48d6" kindref="member">physics::pauli</ref>(</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">,<sp/>device);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[{1,<sp/>1}]<sp/>=<sp/>exp(<ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref>(0,<sp/>phase));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref>(tmp,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref><sp/><ref refid="namespacecytnx_1_1qgates_1ac24faf0474e15c3657f592f51da4afdf" kindref="member">swap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;device)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref><sp/>tmp<sp/>=<sp/><ref refid="namespacecytnx_1ab8a79a03fb0465f3eb2641017f3f1755" kindref="member">zeros</ref>({4,<sp/>4},<sp/><ref refid="namespacecytnx_1ac2c6c045a5fd258e21bd0786744839c2" kindref="member">Type</ref>.ComplexDouble,<sp/>device);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[{0,<sp/>0}]<sp/>=<sp/>tmp[{3,<sp/>3}]<sp/>=<sp/>tmp[{1,<sp/>2}]<sp/>=<sp/>tmp[{2,<sp/>1}]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp.reshape_({2,<sp/>2,<sp/>2,<sp/>2});</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref>(tmp,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>2);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref><sp/><ref refid="namespacecytnx_1_1qgates_1a064386782507fdcafc67a92679e83d4f" kindref="member">sqrt_swap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;device)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref><sp/>tmp<sp/>=<sp/><ref refid="namespacecytnx_1ab8a79a03fb0465f3eb2641017f3f1755" kindref="member">zeros</ref>({4,<sp/>4},<sp/><ref refid="namespacecytnx_1ac2c6c045a5fd258e21bd0786744839c2" kindref="member">Type</ref>.ComplexDouble,<sp/>device);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[{0,<sp/>0}]<sp/>=<sp/>tmp[{3,<sp/>3}]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[{1,<sp/>1}]<sp/>=<sp/>tmp[{2,<sp/>2}]<sp/>=<sp/>0.5<sp/>*<sp/><ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref>(1,<sp/>1);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[{1,<sp/>2}]<sp/>=<sp/>tmp[{2,<sp/>1}]<sp/>=<sp/>0.5<sp/>*<sp/><ref refid="namespacecytnx_1a401ce1c8c4599b9a1a860e9e225e6b9e" kindref="member">cytnx_complex128</ref>(1,<sp/>-1);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp.reshape_({2,<sp/>2,<sp/>2,<sp/>2});</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref>(tmp,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>2);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref><sp/><ref refid="namespacecytnx_1_1qgates_1adeb4ba69e5509f4138fcbe2b7a1550e2" kindref="member">toffoli</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;device)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref><sp/>tmp<sp/>=<sp/><ref refid="namespacecytnx_1ab8a79a03fb0465f3eb2641017f3f1755" kindref="member">zeros</ref>({8,<sp/>8},<sp/><ref refid="namespacecytnx_1ac2c6c045a5fd258e21bd0786744839c2" kindref="member">Type</ref>.Double,<sp/>device);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[{0,<sp/>0}]<sp/>=<sp/>tmp[{1,<sp/>1}]<sp/>=<sp/>tmp[{2,<sp/>2}]<sp/>=<sp/>tmp[{3,<sp/>3}]<sp/>=<sp/>tmp[{4,<sp/>4}]<sp/>=<sp/>tmp[{5,<sp/>5}]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[{6,<sp/>7}]<sp/>=<sp/>tmp[{7,<sp/>6}]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp.reshape_({2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2});</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref>(tmp,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref><sp/><ref refid="namespacecytnx_1_1qgates_1a403811befd679c5a1ea7f1bb0a2f7528" kindref="member">cntl_gate_2q</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref><sp/>&amp;gate_1q)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref><sp/>tmp<sp/>=<sp/><ref refid="namespacecytnx_1ab8a79a03fb0465f3eb2641017f3f1755" kindref="member">zeros</ref>({4,<sp/>4},<sp/>gate_1q.<ref refid="classcytnx_1_1UniTensor_1aa3a370844d981cb86c3d784ecbb573c1" kindref="member">dtype</ref>(),<sp/>gate_1q.<ref refid="classcytnx_1_1UniTensor_1a8e4a44ff5b17788458dc8cf2642f811f" kindref="member">device</ref>());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[{0,<sp/>0}]<sp/>=<sp/>tmp[{1,<sp/>1}]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gt<sp/>=<sp/>gate_1q.<ref refid="classcytnx_1_1UniTensor_1abee44516bc18f72b726500bc2bb4872f" kindref="member">get_block_</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[{2,<sp/>2}]<sp/>=<sp/>gt[{0,<sp/>0}];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[{2,<sp/>3}]<sp/>=<sp/>gt[{0,<sp/>1}];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[{3,<sp/>2}]<sp/>=<sp/>gt[{1,<sp/>0}];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[{3,<sp/>3}]<sp/>=<sp/>gt[{1,<sp/>1}];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp.reshape_({2,<sp/>2,<sp/>2,<sp/>2});</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref>(tmp,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>2);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>qgates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">operators{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref><sp/><ref refid="namespacecytnx_1_1operators_1aeecc22df632adf78082dd92ef87eb8c3" kindref="member">Sz_shalf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;conserve_qns){</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conserve_qns){</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1Bond" kindref="compound">Bond</ref><sp/>bd_phy(<ref refid="namespacecytnx_1ac1ea381505268a3cf3bc68d7b8a480efa236cc2f8a468e7190902edda6ca8ee29" kindref="member">BD_IN</ref>,{<ref refid="classcytnx_1_1Qs" kindref="compound">Qs</ref>(1)&gt;&gt;1,<ref refid="classcytnx_1_1Qs" kindref="compound">Qs</ref>(-1)&gt;&gt;1});</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>out<sp/>=<sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref>({bd_phy,bd_phy.redirect()});</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="classcytnx_1_1UniTensor_1a6910e0251891d7289b5014b7987369ff" kindref="member">at</ref>({0,0,0,0})<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.at({1,1,0,0})<sp/>=<sp/>-0.5;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref>(<ref refid="namespacecytnx_1_1physics_1a1c6ebefa40751712dfb8976b015f48d6" kindref="member">physics::pauli</ref>(</highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">,device).real());</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref><sp/><ref refid="namespacecytnx_1_1operators_1acbd91c764e06a212ae93d5700feaf527" kindref="member">Sp_shalf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;conserve_qns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;aux_dir){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conserve_qns){</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1Bond" kindref="compound">Bond</ref><sp/>bd_phy(<ref refid="namespacecytnx_1ac1ea381505268a3cf3bc68d7b8a480efa236cc2f8a468e7190902edda6ca8ee29" kindref="member">BD_IN</ref>,{<ref refid="classcytnx_1_1Qs" kindref="compound">Qs</ref>(1)&gt;&gt;1,<ref refid="classcytnx_1_1Qs" kindref="compound">Qs</ref>(-1)&gt;&gt;1});</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1Bond" kindref="compound">Bond</ref><sp/>bd_aux;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(aux_dir==</highlight><highlight class="stringliteral">&quot;L&quot;</highlight><highlight class="normal"><sp/>or<sp/>aux_dir==</highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd_aux.<ref refid="classcytnx_1_1Bond_1a707a803fa98fb6a87b5f3c3b3000509f" kindref="member">Init</ref>(<ref refid="namespacecytnx_1ac1ea381505268a3cf3bc68d7b8a480efa236cc2f8a468e7190902edda6ca8ee29" kindref="member">BD_IN</ref>,{<ref refid="classcytnx_1_1Qs" kindref="compound">Qs</ref>(1)&gt;&gt;1});</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(aux_dir==</highlight><highlight class="stringliteral">&quot;R&quot;</highlight><highlight class="normal"><sp/>or<sp/>aux_dir==</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd_aux.Init(<ref refid="namespacecytnx_1ac1ea381505268a3cf3bc68d7b8a480efa6bb366661f9937d42c2284dfac2910da" kindref="member">BD_OUT</ref>,{<ref refid="classcytnx_1_1Qs" kindref="compound">Qs</ref>(-1)&gt;&gt;1});</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cytnx__error_8hpp_1aa2edc77cab5ba7d1561fd1ea6cfba9ac" kindref="member">cytnx_error_msg</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;[ERROR]<sp/>aux_dir<sp/>can<sp/>only<sp/>be<sp/>L<sp/>or<sp/>R.<sp/>(letter<sp/>capital<sp/>insensitive)%s&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>out<sp/>=<sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref>({bd_phy,bd_phy.redirect(),bd_aux});</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="classcytnx_1_1UniTensor_1a6910e0251891d7289b5014b7987369ff" kindref="member">at</ref>({0,1,0})<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>out<sp/>=<sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref>(<ref refid="namespacecytnx_1ab8a79a03fb0465f3eb2641017f3f1755" kindref="member">zeros</ref>({2,2},<ref refid="namespacecytnx_1ac2c6c045a5fd258e21bd0786744839c2" kindref="member">Type</ref>.Double,device));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.at({0,1})<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref><sp/><ref refid="namespacecytnx_1_1operators_1a187acfa82e21b55a4d2770b8e60f4da2" kindref="member">Sn_shalf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;conserve_qns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;aux_dir){</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conserve_qns){</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1Bond" kindref="compound">Bond</ref><sp/>bd_phy(<ref refid="namespacecytnx_1ac1ea381505268a3cf3bc68d7b8a480efa236cc2f8a468e7190902edda6ca8ee29" kindref="member">BD_IN</ref>,{<ref refid="classcytnx_1_1Qs" kindref="compound">Qs</ref>(1)&gt;&gt;1,<ref refid="classcytnx_1_1Qs" kindref="compound">Qs</ref>(-1)&gt;&gt;1});</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1Bond" kindref="compound">Bond</ref><sp/>bd_aux;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(aux_dir==</highlight><highlight class="stringliteral">&quot;L&quot;</highlight><highlight class="normal"><sp/>or<sp/>aux_dir==</highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd_aux.<ref refid="classcytnx_1_1Bond_1a707a803fa98fb6a87b5f3c3b3000509f" kindref="member">Init</ref>(<ref refid="namespacecytnx_1ac1ea381505268a3cf3bc68d7b8a480efa236cc2f8a468e7190902edda6ca8ee29" kindref="member">BD_IN</ref>,{<ref refid="classcytnx_1_1Qs" kindref="compound">Qs</ref>(-1)&gt;&gt;1});</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(aux_dir==</highlight><highlight class="stringliteral">&quot;R&quot;</highlight><highlight class="normal"><sp/>or<sp/>aux_dir==</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd_aux.Init(<ref refid="namespacecytnx_1ac1ea381505268a3cf3bc68d7b8a480efa6bb366661f9937d42c2284dfac2910da" kindref="member">BD_OUT</ref>,{<ref refid="classcytnx_1_1Qs" kindref="compound">Qs</ref>(1)&gt;&gt;1});</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cytnx__error_8hpp_1aa2edc77cab5ba7d1561fd1ea6cfba9ac" kindref="member">cytnx_error_msg</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;[ERROR]<sp/>aux_dir<sp/>can<sp/>only<sp/>be<sp/>L<sp/>or<sp/>R.<sp/>(letter<sp/>capital<sp/>insensitive)%s&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>out<sp/>=<sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref>({bd_phy,bd_phy.redirect(),bd_aux});</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="classcytnx_1_1UniTensor_1a6910e0251891d7289b5014b7987369ff" kindref="member">at</ref>({1,0,0})<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>out<sp/>=<sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref>(<ref refid="namespacecytnx_1ab8a79a03fb0465f3eb2641017f3f1755" kindref="member">zeros</ref>({2,2},<ref refid="namespacecytnx_1ac2c6c045a5fd258e21bd0786744839c2" kindref="member">Type</ref>.Double,device));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.at({1,0})<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cytnx</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/Physics.cpp"/>
  </compounddef>
</doxygen>
