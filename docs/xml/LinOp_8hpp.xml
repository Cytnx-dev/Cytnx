<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="LinOp_8hpp" kind="file" language="C++">
    <compoundname>LinOp.hpp</compoundname>
    <includes refid="Type_8hpp" local="yes">Type.hpp</includes>
    <includes refid="cytnx__error_8hpp" local="yes">cytnx_error.hpp</includes>
    <includes refid="Tensor_8hpp" local="yes">Tensor.hpp</includes>
    <includes refid="Scalar_8hpp" local="yes">Scalar.hpp</includes>
    <includes refid="UniTensor_8hpp" local="yes">UniTensor.hpp</includes>
    <includes local="no">vector</includes>
    <includes local="no">fstream</includes>
    <includes local="no">functional</includes>
    <includes local="no">map</includes>
    <includes local="no">utility</includes>
    <includes local="no">algorithm</includes>
    <includes refid="intrusive__ptr__base_8hpp" local="yes">intrusive_ptr_base.hpp</includes>
    <includes local="yes">utils/vec_clone.hpp</includes>
    <includedby refid="cytnx_8hpp" local="yes">include/cytnx.hpp</includedby>
    <includedby refid="linalg_8hpp" local="yes">include/linalg.hpp</includedby>
    <includedby refid="LinOp_8cpp" local="yes">src/LinOp.cpp</includedby>
    <incdepgraph>
      <node id="35">
        <label>Accessor.hpp</label>
        <link refid="Accessor_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>Bond.hpp</label>
        <link refid="Bond_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Device.hpp</label>
        <link refid="Device_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/LinOp.hpp</label>
        <link refid="LinOp_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>Scalar.hpp</label>
        <link refid="Scalar_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Storage.hpp</label>
        <link refid="Storage_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>Symmetry.hpp</label>
        <link refid="Symmetry_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Tensor.hpp</label>
        <link refid="Tensor_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Type.hpp</label>
        <link refid="Type_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>UniTensor.hpp</label>
        <link refid="UniTensor_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>cytnx_error.hpp</label>
        <link refid="cytnx__error_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>intrusive_ptr_base.hpp</label>
        <link refid="intrusive__ptr__base_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>utils/utils.hpp</label>
        <link refid="utils_8hpp"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>algorithm</label>
      </node>
      <node id="27">
        <label>boost/checked_delete.hpp</label>
      </node>
      <node id="28">
        <label>boost/detail/atomic_count.hpp</label>
      </node>
      <node id="26">
        <label>boost/smart_ptr/intrusive_ptr.hpp</label>
      </node>
      <node id="39">
        <label>cartesian.hpp</label>
      </node>
      <node id="25">
        <label>cassert</label>
      </node>
      <node id="7">
        <label>climits</label>
      </node>
      <node id="30">
        <label>cmath</label>
      </node>
      <node id="4">
        <label>complex</label>
      </node>
      <node id="12">
        <label>cstdio</label>
      </node>
      <node id="13">
        <label>cstdlib</label>
      </node>
      <node id="14">
        <label>cstring</label>
      </node>
      <node id="55">
        <label>dynamic_arg_resolver.hpp</label>
      </node>
      <node id="20">
        <label>fstream</label>
      </node>
      <node id="61">
        <label>functional</label>
      </node>
      <node id="21">
        <label>initializer_list</label>
      </node>
      <node id="16">
        <label>iostream</label>
      </node>
      <node id="32">
        <label>limits</label>
      </node>
      <node id="56">
        <label>map</label>
      </node>
      <node id="24">
        <label>ostream</label>
      </node>
      <node id="15">
        <label>stdarg.h</label>
      </node>
      <node id="17">
        <label>stdexcept</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="50">
        <label>str_utils.hpp</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="31">
        <label>type_traits</label>
      </node>
      <node id="10">
        <label>typeindex</label>
      </node>
      <node id="8">
        <label>typeinfo</label>
      </node>
      <node id="9">
        <label>unordered_map</label>
      </node>
      <node id="36">
        <label>utility</label>
      </node>
      <node id="34">
        <label>utils/dynamic_arg_resolver.hpp</label>
      </node>
      <node id="59">
        <label>utils/vec_clone.hpp</label>
      </node>
      <node id="33">
        <label>utils/vec_range.hpp</label>
      </node>
      <node id="49">
        <label>vec2d_col_sort.hpp</label>
      </node>
      <node id="53">
        <label>vec_argsort.hpp</label>
      </node>
      <node id="40">
        <label>vec_cast.hpp</label>
      </node>
      <node id="41">
        <label>vec_clone.hpp</label>
      </node>
      <node id="46">
        <label>vec_concatenate.hpp</label>
      </node>
      <node id="44">
        <label>vec_erase.hpp</label>
      </node>
      <node id="47">
        <label>vec_intersect.hpp</label>
      </node>
      <node id="52">
        <label>vec_io.hpp</label>
      </node>
      <node id="43">
        <label>vec_map.hpp</label>
      </node>
      <node id="51">
        <label>vec_print.hpp</label>
      </node>
      <node id="48">
        <label>vec_range.hpp</label>
      </node>
      <node id="54">
        <label>vec_sort.hpp</label>
      </node>
      <node id="42">
        <label>vec_unique.hpp</label>
      </node>
      <node id="45">
        <label>vec_where.hpp</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/LinOp.hpp</label>
        <link refid="LinOp_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/cytnx.hpp</label>
        <link refid="cytnx_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/linalg.hpp</label>
        <link refid="linalg_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/ncon.hpp</label>
        <link refid="ncon_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/BlockUniTensor.cpp</label>
        <link refid="BlockUniTensor_8cpp"/>
      </node>
      <node id="7">
        <label>src/DenseUniTensor.cpp</label>
        <link refid="DenseUniTensor_8cpp"/>
      </node>
      <node id="8">
        <label>src/Generator.cpp</label>
        <link refid="Generator_8cpp"/>
      </node>
      <node id="9">
        <label>src/Gncon_base.cpp</label>
        <link refid="Gncon__base_8cpp"/>
      </node>
      <node id="17">
        <label>src/LinOp.cpp</label>
        <link refid="LinOp_8cpp"/>
      </node>
      <node id="10">
        <label>src/Network.cpp</label>
        <link refid="Network_8cpp"/>
      </node>
      <node id="11">
        <label>src/Network_base.cpp</label>
        <link refid="Network__base_8cpp"/>
      </node>
      <node id="12">
        <label>src/Physics.cpp</label>
        <link refid="Physics_8cpp"/>
      </node>
      <node id="13">
        <label>src/SparseUniTensor.cpp</label>
        <link refid="SparseUniTensor_8cpp"/>
      </node>
      <node id="14">
        <label>src/Tensor.cpp</label>
        <link refid="Tensor_8cpp"/>
      </node>
      <node id="15">
        <label>src/UniTensor.cpp</label>
        <link refid="UniTensor_8cpp"/>
      </node>
      <node id="16">
        <label>src/UniTensor_base.cpp</label>
        <link refid="UniTensor__base_8cpp"/>
      </node>
      <node id="4">
        <label>src/ncon.cpp</label>
        <link refid="ncon_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classcytnx_1_1LinOp" prot="public">cytnx::LinOp</innerclass>
    <innernamespace refid="namespacecytnx">cytnx</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_H_LinOp_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_H_LinOp_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Type_8hpp" kindref="compound">Type.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cytnx__error_8hpp" kindref="compound">cytnx_error.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Tensor_8hpp" kindref="compound">Tensor.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Scalar_8hpp" kindref="compound">Scalar.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="UniTensor_8hpp" kindref="compound">UniTensor.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="intrusive__ptr__base_8hpp" kindref="compound">intrusive_ptr_base.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;utils/vec_clone.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecytnx" kindref="compound">cytnx</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classcytnx_1_1LinOp" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcytnx_1_1LinOp" kindref="compound">LinOp</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>_type;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecytnx_1a9a7ab808c7cbef775461ccc31eaabeb4" kindref="member">cytnx_uint64</ref><sp/>_nx;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_device;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_dtype;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pre-storage<sp/>data:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;cytnx_uint64,<sp/>std::pair&lt;std::vector&lt;cytnx_uint64&gt;,<sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref>&gt;&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_elems;<sp/><sp/></highlight><highlight class="comment">//<sp/>map[i]<sp/>-&gt;<sp/>pair[&lt;js&gt;,&lt;Storage&gt;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;cytnx_uint64,<sp/>std::pair&lt;std::vector&lt;cytnx_uint64&gt;,<sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref>&gt;&gt;::iterator<sp/>_elems_it;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref><sp/>_mv_elemfunc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>driver<sp/>of<sp/>void<sp/>f(nx,vin,vout)</highlight></codeline>
<codeline lineno="43"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classcytnx_1_1LinOp_1a4c85814f56d28735575bb577d1d97afa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1LinOp_1a4c85814f56d28735575bb577d1d97afa" kindref="member">LinOp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecytnx_1a9a7ab808c7cbef775461ccc31eaabeb4" kindref="member">cytnx_uint64</ref><sp/>&amp;<ref refid="classcytnx_1_1LinOp_1a7d5704336a5a9f786a582ba0a668b521" kindref="member">nx</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<ref refid="classcytnx_1_1LinOp_1a64aa0529d6f0d5fd4bb06b900a469a08" kindref="member">dtype</ref><sp/>=<sp/><ref refid="namespacecytnx_1ac2c6c045a5fd258e21bd0786744839c2" kindref="member">Type</ref>.Double,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<ref refid="classcytnx_1_1LinOp_1a46021c823974e5460d2be9e35dc0efea" kindref="member">device</ref><sp/>=<sp/><ref refid="namespacecytnx_1a0159aceab8996db3faf89716e4dd6b9a" kindref="member">Device</ref>.cpu)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;mv&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;mv_elem&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cytnx__error_8hpp_1aa2edc77cab5ba7d1561fd1ea6cfba9ac" kindref="member">cytnx_error_msg</ref>(type<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;mv&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[ERROR][LinOp]<sp/>currently<sp/>only<sp/>type=\&quot;mv\&quot;<sp/>(matvec)<sp/>can<sp/>be<sp/>used.%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_type<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_nx<sp/>=<sp/><ref refid="classcytnx_1_1LinOp_1a7d5704336a5a9f786a582ba0a668b521" kindref="member">nx</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cytnx__error_8hpp_1aa2edc77cab5ba7d1561fd1ea6cfba9ac" kindref="member">cytnx_error_msg</ref>(device<sp/>&lt;<sp/>-1<sp/>||<sp/>device<sp/>&gt;=<sp/><ref refid="namespacecytnx_1a0159aceab8996db3faf89716e4dd6b9a" kindref="member">Device</ref>.Ngpus,<sp/></highlight><highlight class="stringliteral">&quot;[ERROR]<sp/>invalid<sp/>device.%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_device<sp/>=<sp/><ref refid="classcytnx_1_1LinOp_1a46021c823974e5460d2be9e35dc0efea" kindref="member">device</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cytnx__error_8hpp_1aa2edc77cab5ba7d1561fd1ea6cfba9ac" kindref="member">cytnx_error_msg</ref>(dtype<sp/>&lt;<sp/>1<sp/>||<sp/>dtype<sp/>&gt;=<sp/>N_Type,<sp/></highlight><highlight class="stringliteral">&quot;[ERROR]<sp/>invalid<sp/>dtype.%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_dtype<sp/>=<sp/><ref refid="classcytnx_1_1LinOp_1a64aa0529d6f0d5fd4bb06b900a469a08" kindref="member">dtype</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/>void<sp/>set_func(std::function&lt;Tensor(const<sp/>Tensor&amp;)&gt;<sp/>custom_f,<sp/>const<sp/>int<sp/>&amp;dtype,<sp/>const<sp/>int</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/>&amp;device){<sp/>if(this-&gt;_type==&quot;mv&quot;){<sp/>this-&gt;_mvfunc<sp/>=<sp/>custom_f;<sp/>cytnx_error_msg(device&lt;-1<sp/>||<sp/>device</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/>&gt;=Device.Ngpus,&quot;[ERROR]<sp/>invalid<sp/>device.%s&quot;,&quot;\n&quot;);<sp/>this-&gt;_device<sp/>=<sp/>device;</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cytnx_error_msg(dtype&lt;1<sp/>||<sp/>dtype<sp/>&gt;=<sp/>N_Type,&quot;[ERROR]<sp/>invalid<sp/>dtype.%s&quot;,&quot;\n&quot;);</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_dtype<sp/>=<sp/>dtype;</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else{</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cytnx_error_msg(true,&quot;[ERROR]<sp/>cannot<sp/>specify<sp/>func<sp/>with<sp/>type=mv_elem%s.<sp/>use<sp/>set_elem</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/>instead.&quot;,&quot;\n&quot;);</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="102" refid="classcytnx_1_1LinOp_1adcdd3fb4a8e375e3225b11ea5e2c56ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1LinOp_1adcdd3fb4a8e375e3225b11ea5e2c56ca" kindref="member">set_elem</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecytnx_1a9a7ab808c7cbef775461ccc31eaabeb4" kindref="member">cytnx_uint64</ref><sp/>&amp;i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecytnx_1a9a7ab808c7cbef775461ccc31eaabeb4" kindref="member">cytnx_uint64</ref><sp/>&amp;j,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;elem,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_exists<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_elems_it<sp/>=<sp/>this-&gt;_elems.find(i);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;_elems_it<sp/>==<sp/>this-&gt;_elems.end())<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>exists:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref><sp/>x({1},<sp/>this-&gt;_dtype);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x(0)<sp/>=<sp/>elem;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_elems[i]<sp/>=<sp/>std::pair&lt;std::vector&lt;cytnx_uint64&gt;,<sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref>&gt;({j},<sp/>x);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;cytnx_uint64&gt;<sp/>&amp;vi<sp/>=<sp/>this-&gt;_elems_it-&gt;second.first;<sp/><sp/></highlight><highlight class="comment">//<sp/>pair:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref><sp/>&amp;ie<sp/>=<sp/>this-&gt;_elems_it-&gt;second.second;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_exists)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cytnx__error_8hpp_1aa2edc77cab5ba7d1561fd1ea6cfba9ac" kindref="member">cytnx_error_msg</ref>(std::find(vi.begin(),<sp/>vi.end(),<sp/>j)<sp/>!=<sp/>vi.end(),</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[ERROR]<sp/>the<sp/>element<sp/>is<sp/>set%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vi.push_back(j);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ie.<ref refid="classcytnx_1_1Tensor_1a68a91d1554a4550eac7d339240fa9d02" kindref="member">append</ref>(elem);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="122" refid="classcytnx_1_1LinOp_1afa706c8f70c20e993d8721b963a38b74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Tensor::Tproxy<sp/><ref refid="classcytnx_1_1LinOp_1afa706c8f70c20e993d8721b963a38b74" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecytnx_1a9a7ab808c7cbef775461ccc31eaabeb4" kindref="member">cytnx_uint64</ref><sp/>&amp;i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecytnx_1a9a7ab808c7cbef775461ccc31eaabeb4" kindref="member">cytnx_uint64</ref><sp/>&amp;j)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//[Note<sp/>that<sp/>this<sp/>can<sp/>only<sp/>call<sp/>by<sp/>mv_elem]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>element<sp/>is<sp/>not<sp/>exists,<sp/>it<sp/>will<sp/>create<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_elems_it<sp/>=<sp/>this-&gt;_elems.find(i);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;_elems_it<sp/>==<sp/>this-&gt;_elems.end())<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>exists:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref><sp/>x({1},<sp/>this-&gt;_dtype);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x(0)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_elems[i]<sp/>=<sp/>std::pair&lt;std::vector&lt;cytnx_uint64&gt;,<sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref>&gt;({j},<sp/>x);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;_elems[i].second(0);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;cytnx_uint64&gt;<sp/>&amp;vi<sp/>=<sp/>this-&gt;_elems_it-&gt;second.first;<sp/><sp/></highlight><highlight class="comment">//<sp/>pair:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref><sp/>&amp;ie<sp/>=<sp/>this-&gt;_elems_it-&gt;second.second;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tmp_it<sp/>=<sp/>std::find(vi.begin(),<sp/>vi.end(),<sp/>j);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(check_exists){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>cytnx_error_msg(std::find(vi.begin(),<sp/>vi.end(),<sp/>j)!=vi.end(),&quot;[ERROR]<sp/>the<sp/>element<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>set%s&quot;,&quot;\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp_it<sp/>==<sp/>vi.end())<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vi.push_back(j);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ie.<ref refid="classcytnx_1_1Tensor_1a68a91d1554a4550eac7d339240fa9d02" kindref="member">append</ref>(0);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ie(vi.size()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ie(std::distance(vi.begin(),<sp/>tmp_it));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="classcytnx_1_1LinOp_1aeb31367ba356298976de92fef9e948cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1LinOp_1aeb31367ba356298976de92fef9e948cf" kindref="member">set_device</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<ref refid="classcytnx_1_1LinOp_1a46021c823974e5460d2be9e35dc0efea" kindref="member">device</ref>)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cytnx__error_8hpp_1aa2edc77cab5ba7d1561fd1ea6cfba9ac" kindref="member">cytnx_error_msg</ref>(device<sp/>&lt;<sp/>-1<sp/>||<sp/>device<sp/>&gt;=<sp/><ref refid="namespacecytnx_1a0159aceab8996db3faf89716e4dd6b9a" kindref="member">Device</ref>.Ngpus,<sp/></highlight><highlight class="stringliteral">&quot;[ERROR]<sp/>invalid<sp/>device.%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_device<sp/>=<sp/><ref refid="classcytnx_1_1LinOp_1a46021c823974e5460d2be9e35dc0efea" kindref="member">device</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="155" refid="classcytnx_1_1LinOp_1af71ddba715715d03342a323c82b0eb7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1LinOp_1af71ddba715715d03342a323c82b0eb7f" kindref="member">set_dtype</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<ref refid="classcytnx_1_1LinOp_1a64aa0529d6f0d5fd4bb06b900a469a08" kindref="member">dtype</ref>)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cytnx__error_8hpp_1aa2edc77cab5ba7d1561fd1ea6cfba9ac" kindref="member">cytnx_error_msg</ref>(dtype<sp/>&lt;<sp/>1<sp/>||<sp/>dtype<sp/>&gt;=<sp/>N_Type,<sp/></highlight><highlight class="stringliteral">&quot;[ERROR]<sp/>invalid<sp/>dtype.%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_dtype<sp/>=<sp/><ref refid="classcytnx_1_1LinOp_1a64aa0529d6f0d5fd4bb06b900a469a08" kindref="member">dtype</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="159" refid="classcytnx_1_1LinOp_1a46021c823974e5460d2be9e35dc0efea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1LinOp_1a46021c823974e5460d2be9e35dc0efea" kindref="member">device</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;_device;<sp/>};</highlight></codeline>
<codeline lineno="160" refid="classcytnx_1_1LinOp_1a64aa0529d6f0d5fd4bb06b900a469a08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1LinOp_1a64aa0529d6f0d5fd4bb06b900a469a08" kindref="member">dtype</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;_dtype;<sp/>};</highlight></codeline>
<codeline lineno="161" refid="classcytnx_1_1LinOp_1a7d5704336a5a9f786a582ba0a668b521" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecytnx_1a9a7ab808c7cbef775461ccc31eaabeb4" kindref="member">cytnx_uint64</ref><sp/><ref refid="classcytnx_1_1LinOp_1a7d5704336a5a9f786a582ba0a668b521" kindref="member">nx</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;_nx;<sp/>};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1LinOp_1af3e9b2601404994b0ce40b4a148ab637" kindref="member">_print</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>expose<sp/>to<sp/>interitance:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>user<sp/>to<sp/>check<sp/>the<sp/>output<sp/>to<sp/>be<sp/>Tensor</highlight></codeline>
<codeline lineno="169"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref><sp/><ref refid="classcytnx_1_1LinOp_1abd7cc9836466e3a652293356a4f00e14" kindref="member">matvec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1Tensor" kindref="compound">Tensor</ref><sp/>&amp;Tin);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>expose<sp/>to<sp/>interface:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref><sp/><ref refid="classcytnx_1_1LinOp_1abd7cc9836466e3a652293356a4f00e14" kindref="member">matvec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcytnx_1_1UniTensor" kindref="compound">UniTensor</ref><sp/>&amp;Tin);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>virtual<sp/>std::vector&lt;UniTensor&gt;<sp/>matvec(const<sp/>std::vector&lt;UniTensor&gt;<sp/>&amp;Tin);</highlight></codeline>
<codeline lineno="176"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cytnx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/LinOp.hpp"/>
  </compounddef>
</doxygen>
